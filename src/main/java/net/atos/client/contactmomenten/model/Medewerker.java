/**
 * Contactmomenten API
 * Een API om contactmomenten met klanten te registreren of op te vragen.  **Afhankelijkheden**  Deze API is afhankelijk van:  * Autorisaties API * Notificaties API * Klanten API * Zaken API *(optioneel)* * Verzoeken API *(optioneel)* * Documenten API *(optioneel)*  **Autorisatie**  Deze API vereist autorisatie. Je kan de [token-tool](https://zaken-auth.vng.cloud/) gebruiken om JWT-tokens te genereren.  ** Notificaties  Deze API publiceert notificaties op het kanaal `contactmomenten`.  **Main resource**  `contactmoment`    **Kenmerken**  * `bronorganisatie`: Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die de klantinteractie heeft gecreeerd. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef * `kanaal`: Het communicatiekanaal waarlangs het CONTACTMOMENT gevoerd wordt  **Resources en acties**   **Handige links**  * [Documentatie](https://zaakgerichtwerken.vng.cloud/standaard) * [Zaakgericht werken](https://zaakgerichtwerken.vng.cloud)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.contactmomenten.model;

import jakarta.json.bind.annotation.JsonbProperty;


public class Medewerker  {

 /**
   * Een korte unieke aanduiding van de MEDEWERKER.
  **/
  @JsonbProperty("identificatie")
  private String identificatie;

 /**
   * De achternaam zoals de MEDEWERKER die in het dagelijkse verkeer gebruikt.
  **/
  @JsonbProperty("achternaam")
  private String achternaam;

 /**
   * De verzameling letters die gevormd wordt door de eerste letter van alle in volgorde voorkomende voornamen.
  **/
  @JsonbProperty("voorletters")
  private String voorletters;

 /**
   * Dat deel van de geslachtsnaam dat voorkomt in Tabel 36 (GBA), voorvoegseltabel, en door een spatie van de geslachtsnaam is
  **/
  @JsonbProperty("voorvoegselAchternaam")
  private String voorvoegselAchternaam;

 /**
   * Een korte unieke aanduiding van de MEDEWERKER.
   * @return identificatie
  **/
  public String getIdentificatie() {
    return identificatie;
  }

  /**
    * Set identificatie
  **/
  public void setIdentificatie(String identificatie) {
    this.identificatie = identificatie;
  }

  public Medewerker identificatie(String identificatie) {
    this.identificatie = identificatie;
    return this;
  }

 /**
   * De achternaam zoals de MEDEWERKER die in het dagelijkse verkeer gebruikt.
   * @return achternaam
  **/
  public String getAchternaam() {
    return achternaam;
  }

  /**
    * Set achternaam
  **/
  public void setAchternaam(String achternaam) {
    this.achternaam = achternaam;
  }

  public Medewerker achternaam(String achternaam) {
    this.achternaam = achternaam;
    return this;
  }

 /**
   * De verzameling letters die gevormd wordt door de eerste letter van alle in volgorde voorkomende voornamen.
   * @return voorletters
  **/
  public String getVoorletters() {
    return voorletters;
  }

  /**
    * Set voorletters
  **/
  public void setVoorletters(String voorletters) {
    this.voorletters = voorletters;
  }

  public Medewerker voorletters(String voorletters) {
    this.voorletters = voorletters;
    return this;
  }

 /**
   * Dat deel van de geslachtsnaam dat voorkomt in Tabel 36 (GBA), voorvoegseltabel, en door een spatie van de geslachtsnaam is
   * @return voorvoegselAchternaam
  **/
  public String getVoorvoegselAchternaam() {
    return voorvoegselAchternaam;
  }

  /**
    * Set voorvoegselAchternaam
  **/
  public void setVoorvoegselAchternaam(String voorvoegselAchternaam) {
    this.voorvoegselAchternaam = voorvoegselAchternaam;
  }

  public Medewerker voorvoegselAchternaam(String voorvoegselAchternaam) {
    this.voorvoegselAchternaam = voorvoegselAchternaam;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Medewerker {\n");

    sb.append("    identificatie: ").append(toIndentedString(identificatie)).append("\n");
    sb.append("    achternaam: ").append(toIndentedString(achternaam)).append("\n");
    sb.append("    voorletters: ").append(toIndentedString(voorletters)).append("\n");
    sb.append("    voorvoegselAchternaam: ").append(toIndentedString(voorvoegselAchternaam)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
