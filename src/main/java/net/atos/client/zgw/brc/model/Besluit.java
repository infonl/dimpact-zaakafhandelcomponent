/**
 * Besluiten API
 * Een API om een besluitregistratiecomponent (BRC) te benaderen.  Een BESLUIT wordt veelal schriftelijk vastgelegd maar dit is niet noodzakelijk. Omgekeerd kan het voorkomen dat in een INFORMATIEOBJECT meerdere besluiten vastgelegd zijn. Vandaar de N:M-relatie naar INFORMATIEOBJECT. Een besluit komt voort uit een zaak van de zaakbehandelende organisatie dan wel is een besluit van een andere organisatie dat het onderwerp (object) is van een zaak van de zaakbehandelende organisatie. BESLUIT heeft dan ook een optionele relatie met de ZAAK waarvan het een uitkomst is.  De typering van BESLUITen is in de Catalogi API (ZTC) ondergebracht in de vorm van BESLUITTYPEn.  **Afhankelijkheden**  Deze API is afhankelijk van:  * Catalogi API * Notificaties API * Documenten API *(optioneel)* * Zaken API *(optioneel)* * Autorisaties API *(optioneel)*   ### Autorisatie  Deze API vereist autorisatie.  _Zelf een token genereren_  De tokens die gebruikt worden voor autorisatie zijn [JWT's](https://jwt.io) (JSON web token). In de API calls moeten deze gebruikt worden in de `Authorization` header:  ``` Authorization: Bearer <token> ```  Om een JWT te genereren heb je een `client ID` en een `secret` nodig. Het JWT moet gebouwd worden volgens het `HS256` algoritme. De vereiste payload is:  ```json {     \"iss\": \"<client ID>\",     \"iat\": 1572863906,     \"client_id\": \"<client ID>\",     \"user_id\": \"<user identifier>\",     \"user_representation\": \"<user representation>\" } ```  Als `issuer` gebruik je dus je eigen client ID. De `iat` timestamp is een UNIX-timestamp die aangeeft op welk moment het token gegenereerd is.  `user_id` en `user_representation` zijn nodig voor de audit trails. Het zijn vrije velden met als enige beperking dat de lengte maximaal de lengte van de overeenkomstige velden in de audit trail resources is (zie rest API spec).   ### Notificaties  Deze API publiceert notificaties op het kanaal `besluiten`.  **Main resource**  `besluit`    **Kenmerken**  * `verantwoordelijke_organisatie`: Het RSIN van de niet-natuurlijk persoon zijnde de organisatie die het besluit heeft vastgesteld. * `besluittype`: URL-referentie naar het BESLUITTYPE (in de Catalogi API).  **Resources en acties**   **Handige links**  * [API-documentatie](https://vng-realisatie.github.io/gemma-zaken/standaard/) * [Open Zaak documentatie](https://open-zaak.readthedocs.io/en/latest/) * [Zaakgericht werken](https://www.vngrealisatie.nl/producten/api-standaarden-zaakgericht-werken) * [Open Zaak GitHub](https://github.com/open-zaak/open-zaak)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@maykinmedia.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.zgw.brc.model;

import java.lang.reflect.Type;
import java.net.URI;
import java.time.LocalDate;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;
import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.bind.serializer.JsonbSerializer;
import jakarta.json.bind.serializer.SerializationContext;
import jakarta.json.stream.JsonGenerator;
import jakarta.json.stream.JsonParser;


public class Besluit  {

 /**
   * URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object.
  **/
  @JsonbProperty("url")
  private URI url;

 /**
   * Identificatie van het besluit binnen de organisatie die het besluit heeft vastgesteld. Indien deze niet opgegeven is, dan wordt die gegenereerd.
  **/
  @JsonbProperty("identificatie")
  private String identificatie;

 /**
   * Het RSIN van de niet-natuurlijk persoon zijnde de organisatie die het besluit heeft vastgesteld.
  **/
  @JsonbProperty("verantwoordelijkeOrganisatie")
  private String verantwoordelijkeOrganisatie;

 /**
   * URL-referentie naar het BESLUITTYPE (in de Catalogi API).
  **/
  @JsonbProperty("besluittype")
  private URI besluittype;

 /**
   * URL-referentie naar de ZAAK (in de Zaken API) waarvan dit besluit uitkomst is.
  **/
  @JsonbProperty("zaak")
  private URI zaak;

 /**
   * De beslisdatum (AWB) van het besluit.
  **/
  @JsonbProperty("datum")
  private LocalDate datum;

 /**
   * Toelichting bij het besluit.
  **/
  @JsonbProperty("toelichting")
  private String toelichting;

 /**
   * Een orgaan van een rechtspersoon krachtens publiekrecht ingesteld of een persoon of college, met enig openbaar gezag bekleed onder wiens verantwoordelijkheid het besluit vastgesteld is.
  **/
  @JsonbProperty("bestuursorgaan")
  private String bestuursorgaan;

 /**
   * Ingangsdatum van de werkingsperiode van het besluit.
  **/
  @JsonbProperty("ingangsdatum")
  private LocalDate ingangsdatum;

 /**
   * Datum waarop de werkingsperiode van het besluit eindigt.
  **/
  @JsonbProperty("vervaldatum")
  private LocalDate vervaldatum;

  @JsonbTypeSerializer(VervalredenEnum.Serializer.class)
  @JsonbTypeDeserializer(VervalredenEnum.Deserializer.class)
  public enum VervalredenEnum {

    TIJDELIJK(String.valueOf("tijdelijk")), INGETROKKEN_OVERHEID(String.valueOf("ingetrokken_overheid")), INGETROKKEN_BELANGHEBBENDE(String.valueOf("ingetrokken_belanghebbende"));


    String value;

    VervalredenEnum (String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static final class Deserializer implements JsonbDeserializer<VervalredenEnum> {
        @Override
        public VervalredenEnum deserialize(JsonParser parser, DeserializationContext ctx, Type rtType) {
            for (VervalredenEnum b : VervalredenEnum.values()) {
                if (String.valueOf(b.value).equals(parser.getString())) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + parser.getString() + "'");
        }
    }

    public static final class Serializer implements JsonbSerializer<VervalredenEnum> {
        @Override
        public void serialize(VervalredenEnum obj, JsonGenerator generator, SerializationContext ctx) {
            generator.write(obj.value);
        }
    }
  }

 /**
   * De omschrijving die aangeeft op grond waarvan het besluit is of komt te vervallen.  Uitleg bij mogelijke waarden:  * `tijdelijk` - Besluit met tijdelijke werking * `ingetrokken_overheid` - Besluit ingetrokken door overheid * `ingetrokken_belanghebbende` - Besluit ingetrokken o.v.v. belanghebbende
  **/
  @JsonbProperty("vervalreden")
  private VervalredenEnum vervalreden;

  @JsonbProperty("vervalredenWeergave")
  private String vervalredenWeergave;

 /**
   * Datum waarop het besluit gepubliceerd wordt.
  **/
  @JsonbProperty("publicatiedatum")
  private LocalDate publicatiedatum;

 /**
   * Datum waarop het besluit verzonden is.
  **/
  @JsonbProperty("verzenddatum")
  private LocalDate verzenddatum;

 /**
   * De datum tot wanneer verweer tegen het besluit mogelijk is.
  **/
  @JsonbProperty("uiterlijkeReactiedatum")
  private LocalDate uiterlijkeReactiedatum;

  public Besluit() {
  }

 @JsonbCreator
  public Besluit(
    @JsonbProperty(value = "url", nillable = true) URI url,
    @JsonbProperty(value = "vervalredenWeergave", nillable = true) String vervalredenWeergave
  ) {
    this.url = url;
    this.vervalredenWeergave = vervalredenWeergave;
  }

 /**
   * URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object.
   * @return url
  **/
  public URI getUrl() {
    return url;
  }


 /**
   * Identificatie van het besluit binnen de organisatie die het besluit heeft vastgesteld. Indien deze niet opgegeven is, dan wordt die gegenereerd.
   * @return identificatie
  **/
  public String getIdentificatie() {
    return identificatie;
  }

  /**
    * Set identificatie
  **/
  public void setIdentificatie(String identificatie) {
    this.identificatie = identificatie;
  }

  public Besluit identificatie(String identificatie) {
    this.identificatie = identificatie;
    return this;
  }

 /**
   * Het RSIN van de niet-natuurlijk persoon zijnde de organisatie die het besluit heeft vastgesteld.
   * @return verantwoordelijkeOrganisatie
  **/
  public String getVerantwoordelijkeOrganisatie() {
    return verantwoordelijkeOrganisatie;
  }

  /**
    * Set verantwoordelijkeOrganisatie
  **/
  public void setVerantwoordelijkeOrganisatie(String verantwoordelijkeOrganisatie) {
    this.verantwoordelijkeOrganisatie = verantwoordelijkeOrganisatie;
  }

  public Besluit verantwoordelijkeOrganisatie(String verantwoordelijkeOrganisatie) {
    this.verantwoordelijkeOrganisatie = verantwoordelijkeOrganisatie;
    return this;
  }

 /**
   * URL-referentie naar het BESLUITTYPE (in de Catalogi API).
   * @return besluittype
  **/
  public URI getBesluittype() {
    return besluittype;
  }

  /**
    * Set besluittype
  **/
  public void setBesluittype(URI besluittype) {
    this.besluittype = besluittype;
  }

  public Besluit besluittype(URI besluittype) {
    this.besluittype = besluittype;
    return this;
  }

 /**
   * URL-referentie naar de ZAAK (in de Zaken API) waarvan dit besluit uitkomst is.
   * @return zaak
  **/
  public URI getZaak() {
    return zaak;
  }

  /**
    * Set zaak
  **/
  public void setZaak(URI zaak) {
    this.zaak = zaak;
  }

  public Besluit zaak(URI zaak) {
    this.zaak = zaak;
    return this;
  }

 /**
   * De beslisdatum (AWB) van het besluit.
   * @return datum
  **/
  public LocalDate getDatum() {
    return datum;
  }

  /**
    * Set datum
  **/
  public void setDatum(LocalDate datum) {
    this.datum = datum;
  }

  public Besluit datum(LocalDate datum) {
    this.datum = datum;
    return this;
  }

 /**
   * Toelichting bij het besluit.
   * @return toelichting
  **/
  public String getToelichting() {
    return toelichting;
  }

  /**
    * Set toelichting
  **/
  public void setToelichting(String toelichting) {
    this.toelichting = toelichting;
  }

  public Besluit toelichting(String toelichting) {
    this.toelichting = toelichting;
    return this;
  }

 /**
   * Een orgaan van een rechtspersoon krachtens publiekrecht ingesteld of een persoon of college, met enig openbaar gezag bekleed onder wiens verantwoordelijkheid het besluit vastgesteld is.
   * @return bestuursorgaan
  **/
  public String getBestuursorgaan() {
    return bestuursorgaan;
  }

  /**
    * Set bestuursorgaan
  **/
  public void setBestuursorgaan(String bestuursorgaan) {
    this.bestuursorgaan = bestuursorgaan;
  }

  public Besluit bestuursorgaan(String bestuursorgaan) {
    this.bestuursorgaan = bestuursorgaan;
    return this;
  }

 /**
   * Ingangsdatum van de werkingsperiode van het besluit.
   * @return ingangsdatum
  **/
  public LocalDate getIngangsdatum() {
    return ingangsdatum;
  }

  /**
    * Set ingangsdatum
  **/
  public void setIngangsdatum(LocalDate ingangsdatum) {
    this.ingangsdatum = ingangsdatum;
  }

  public Besluit ingangsdatum(LocalDate ingangsdatum) {
    this.ingangsdatum = ingangsdatum;
    return this;
  }

 /**
   * Datum waarop de werkingsperiode van het besluit eindigt.
   * @return vervaldatum
  **/
  public LocalDate getVervaldatum() {
    return vervaldatum;
  }

  /**
    * Set vervaldatum
  **/
  public void setVervaldatum(LocalDate vervaldatum) {
    this.vervaldatum = vervaldatum;
  }

  public Besluit vervaldatum(LocalDate vervaldatum) {
    this.vervaldatum = vervaldatum;
    return this;
  }

 /**
   * De omschrijving die aangeeft op grond waarvan het besluit is of komt te vervallen.  Uitleg bij mogelijke waarden:  * &#x60;tijdelijk&#x60; - Besluit met tijdelijke werking * &#x60;ingetrokken_overheid&#x60; - Besluit ingetrokken door overheid * &#x60;ingetrokken_belanghebbende&#x60; - Besluit ingetrokken o.v.v. belanghebbende
   * @return vervalreden
  **/
  public VervalredenEnum getVervalreden() {
    return vervalreden;
  }

  /**
    * Set vervalreden
  **/
  public void setVervalreden(VervalredenEnum vervalreden) {
    this.vervalreden = vervalreden;
  }

  public Besluit vervalreden(VervalredenEnum vervalreden) {
    this.vervalreden = vervalreden;
    return this;
  }

 /**
   * Get vervalredenWeergave
   * @return vervalredenWeergave
  **/
  public String getVervalredenWeergave() {
    return vervalredenWeergave;
  }


 /**
   * Datum waarop het besluit gepubliceerd wordt.
   * @return publicatiedatum
  **/
  public LocalDate getPublicatiedatum() {
    return publicatiedatum;
  }

  /**
    * Set publicatiedatum
  **/
  public void setPublicatiedatum(LocalDate publicatiedatum) {
    this.publicatiedatum = publicatiedatum;
  }

  public Besluit publicatiedatum(LocalDate publicatiedatum) {
    this.publicatiedatum = publicatiedatum;
    return this;
  }

 /**
   * Datum waarop het besluit verzonden is.
   * @return verzenddatum
  **/
  public LocalDate getVerzenddatum() {
    return verzenddatum;
  }

  /**
    * Set verzenddatum
  **/
  public void setVerzenddatum(LocalDate verzenddatum) {
    this.verzenddatum = verzenddatum;
  }

  public Besluit verzenddatum(LocalDate verzenddatum) {
    this.verzenddatum = verzenddatum;
    return this;
  }

 /**
   * De datum tot wanneer verweer tegen het besluit mogelijk is.
   * @return uiterlijkeReactiedatum
  **/
  public LocalDate getUiterlijkeReactiedatum() {
    return uiterlijkeReactiedatum;
  }

  /**
    * Set uiterlijkeReactiedatum
  **/
  public void setUiterlijkeReactiedatum(LocalDate uiterlijkeReactiedatum) {
    this.uiterlijkeReactiedatum = uiterlijkeReactiedatum;
  }

  public Besluit uiterlijkeReactiedatum(LocalDate uiterlijkeReactiedatum) {
    this.uiterlijkeReactiedatum = uiterlijkeReactiedatum;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Besluit {\n");

    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    identificatie: ").append(toIndentedString(identificatie)).append("\n");
    sb.append("    verantwoordelijkeOrganisatie: ").append(toIndentedString(verantwoordelijkeOrganisatie)).append("\n");
    sb.append("    besluittype: ").append(toIndentedString(besluittype)).append("\n");
    sb.append("    zaak: ").append(toIndentedString(zaak)).append("\n");
    sb.append("    datum: ").append(toIndentedString(datum)).append("\n");
    sb.append("    toelichting: ").append(toIndentedString(toelichting)).append("\n");
    sb.append("    bestuursorgaan: ").append(toIndentedString(bestuursorgaan)).append("\n");
    sb.append("    ingangsdatum: ").append(toIndentedString(ingangsdatum)).append("\n");
    sb.append("    vervaldatum: ").append(toIndentedString(vervaldatum)).append("\n");
    sb.append("    vervalreden: ").append(toIndentedString(vervalreden)).append("\n");
    sb.append("    vervalredenWeergave: ").append(toIndentedString(vervalredenWeergave)).append("\n");
    sb.append("    publicatiedatum: ").append(toIndentedString(publicatiedatum)).append("\n");
    sb.append("    verzenddatum: ").append(toIndentedString(verzenddatum)).append("\n");
    sb.append("    uiterlijkeReactiedatum: ").append(toIndentedString(uiterlijkeReactiedatum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
