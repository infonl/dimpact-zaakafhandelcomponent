/**
 * Besluiten API
 * Een API om een besluitregistratiecomponent (BRC) te benaderen.  Een BESLUIT wordt veelal schriftelijk vastgelegd maar dit is niet noodzakelijk. Omgekeerd kan het voorkomen dat in een INFORMATIEOBJECT meerdere besluiten vastgelegd zijn. Vandaar de N:M-relatie naar INFORMATIEOBJECT. Een besluit komt voort uit een zaak van de zaakbehandelende organisatie dan wel is een besluit van een andere organisatie dat het onderwerp (object) is van een zaak van de zaakbehandelende organisatie. BESLUIT heeft dan ook een optionele relatie met de ZAAK waarvan het een uitkomst is.  De typering van BESLUITen is in de Catalogi API (ZTC) ondergebracht in de vorm van BESLUITTYPEn.  **Afhankelijkheden**  Deze API is afhankelijk van:  * Catalogi API * Notificaties API * Documenten API *(optioneel)* * Zaken API *(optioneel)* * Autorisaties API *(optioneel)*   ### Autorisatie  Deze API vereist autorisatie.  _Zelf een token genereren_  De tokens die gebruikt worden voor autorisatie zijn [JWT's](https://jwt.io) (JSON web token). In de API calls moeten deze gebruikt worden in de `Authorization` header:  ``` Authorization: Bearer <token> ```  Om een JWT te genereren heb je een `client ID` en een `secret` nodig. Het JWT moet gebouwd worden volgens het `HS256` algoritme. De vereiste payload is:  ```json {     \"iss\": \"<client ID>\",     \"iat\": 1572863906,     \"client_id\": \"<client ID>\",     \"user_id\": \"<user identifier>\",     \"user_representation\": \"<user representation>\" } ```  Als `issuer` gebruik je dus je eigen client ID. De `iat` timestamp is een UNIX-timestamp die aangeeft op welk moment het token gegenereerd is.  `user_id` en `user_representation` zijn nodig voor de audit trails. Het zijn vrije velden met als enige beperking dat de lengte maximaal de lengte van de overeenkomstige velden in de audit trail resources is (zie rest API spec).   ### Notificaties  Deze API publiceert notificaties op het kanaal `besluiten`.  **Main resource**  `besluit`    **Kenmerken**  * `verantwoordelijke_organisatie`: Het RSIN van de niet-natuurlijk persoon zijnde de organisatie die het besluit heeft vastgesteld. * `besluittype`: URL-referentie naar het BESLUITTYPE (in de Catalogi API).  **Resources en acties**   **Handige links**  * [API-documentatie](https://vng-realisatie.github.io/gemma-zaken/standaard/) * [Open Zaak documentatie](https://open-zaak.readthedocs.io/en/latest/) * [Zaakgericht werken](https://www.vngrealisatie.nl/producten/api-standaarden-zaakgericht-werken) * [Open Zaak GitHub](https://github.com/open-zaak/open-zaak)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@maykinmedia.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.zgw.brc.model;

import jakarta.json.bind.annotation.JsonbProperty;


public class FieldValidationError  {

 /**
   * Naam van het veld met ongeldige gegevens
  **/
  @JsonbProperty("name")
  private String name;

 /**
   * Systeemcode die het type fout aangeeft
  **/
  @JsonbProperty("code")
  private String code;

 /**
   * Uitleg wat er precies fout is met de gegevens
  **/
  @JsonbProperty("reason")
  private String reason;

 /**
   * Naam van het veld met ongeldige gegevens
   * @return name
  **/
  public String getName() {
    return name;
  }

  /**
    * Set name
  **/
  public void setName(String name) {
    this.name = name;
  }

  public FieldValidationError name(String name) {
    this.name = name;
    return this;
  }

 /**
   * Systeemcode die het type fout aangeeft
   * @return code
  **/
  public String getCode() {
    return code;
  }

  /**
    * Set code
  **/
  public void setCode(String code) {
    this.code = code;
  }

  public FieldValidationError code(String code) {
    this.code = code;
    return this;
  }

 /**
   * Uitleg wat er precies fout is met de gegevens
   * @return reason
  **/
  public String getReason() {
    return reason;
  }

  /**
    * Set reason
  **/
  public void setReason(String reason) {
    this.reason = reason;
  }

  public FieldValidationError reason(String reason) {
    this.reason = reason;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldValidationError {\n");

    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
