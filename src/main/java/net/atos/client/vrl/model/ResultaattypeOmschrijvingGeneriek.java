/**
 * Referentielijsten & Selectielijst API
 *  Een API om referentielijstwaarden en de gemeentelijke selectielijst te benaderen.  ## Selectielijst  De [Gemeentelijke Selectielijst](https://vng.nl/selectielijst) is relevant in het kader van archivering.  **Zaakgericht werken**  Bij het configureren van zaaktypes (en resultaattypes) in de catalogus API refereren een aantal resources naar resources binnen de Selectielijst API. Het gaat dan om de `ProcesType` en `Resultaat` resources.  ## Referentielijsten  Referentielijsten bevat een standaardset aan waarden. Deze waarden zijn net té dynamisch om in een enum opgenomen te worden, maar er is wel behoefte om deze landelijk te standaardiseren. Een voorbeeld hiervan is de set aan mogelijke communicatiekanalen.  ## Autorisatie  Deze APIs zijn alleen-lezen, en behoeven geen autorisatie.  ## Inhoud  De inhoud wordt beheerd door VNG Realisatie. Om de inhoud van referentielijsten bij te werken, contacteer dan VNG Realisatie via e-mail of op Github.  De inhoud van de Gemeentelijke Selectielijst wordt geïmporteerd vanuit de gepubliceerde Excel-bestanden.
 *
 * The version of the OpenAPI document: 1.0.0-alpha
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.vrl.model;

import java.net.URI;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;


public class ResultaattypeOmschrijvingGeneriek  {

  @JsonbProperty("url")
  private URI url;

 /**
   * Algemeen gehanteerde omschrijvingen van de aard van het resultaat van zaken
  **/
  @JsonbProperty("omschrijving")
  private String omschrijving;

 /**
   * Nauwkeurige beschrijving van het generieke type resultaat.
  **/
  @JsonbProperty("definitie")
  private String definitie;

 /**
   * Zinvolle toelichting bij de waarde van de generieke omschrijving van het resultaat.
  **/
  @JsonbProperty("opmerking")
  private String opmerking;

  public ResultaattypeOmschrijvingGeneriek() {
  }

 @JsonbCreator
  public ResultaattypeOmschrijvingGeneriek(
    @JsonbProperty(value = "url", nillable = true) URI url
  ) {
    this.url = url;
  }

 /**
   * Get url
   * @return url
  **/
  public URI getUrl() {
    return url;
  }


 /**
   * Algemeen gehanteerde omschrijvingen van de aard van het resultaat van zaken
   * @return omschrijving
  **/
  public String getOmschrijving() {
    return omschrijving;
  }

  /**
    * Set omschrijving
  **/
  public void setOmschrijving(String omschrijving) {
    this.omschrijving = omschrijving;
  }

  public ResultaattypeOmschrijvingGeneriek omschrijving(String omschrijving) {
    this.omschrijving = omschrijving;
    return this;
  }

 /**
   * Nauwkeurige beschrijving van het generieke type resultaat.
   * @return definitie
  **/
  public String getDefinitie() {
    return definitie;
  }

  /**
    * Set definitie
  **/
  public void setDefinitie(String definitie) {
    this.definitie = definitie;
  }

  public ResultaattypeOmschrijvingGeneriek definitie(String definitie) {
    this.definitie = definitie;
    return this;
  }

 /**
   * Zinvolle toelichting bij de waarde van de generieke omschrijving van het resultaat.
   * @return opmerking
  **/
  public String getOpmerking() {
    return opmerking;
  }

  /**
    * Set opmerking
  **/
  public void setOpmerking(String opmerking) {
    this.opmerking = opmerking;
  }

  public ResultaattypeOmschrijvingGeneriek opmerking(String opmerking) {
    this.opmerking = opmerking;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResultaattypeOmschrijvingGeneriek {\n");

    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    omschrijving: ").append(toIndentedString(omschrijving)).append("\n");
    sb.append("    definitie: ").append(toIndentedString(definitie)).append("\n");
    sb.append("    opmerking: ").append(toIndentedString(opmerking)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
