/**
 * WOO Publications
 *  ## Documentatie  De Woo-Publicatiebank API stelt client-applicaties in staat om publicaties van documenten te raadplegen en te beheren in het kader van een open overheid. Deze API-documentatie bevat drie logische 'domeinen'.  ### Domeinen  **Metadata**  Publicaties en hun gerelateerde documenten moeten bepaalde metadata hebben. De metadata-endpoints stellen client-applicaties in staat om beschikbare metadata op te halen (en in sommige resources ook aan te maken of bij te werken).  * [Organisaties](#tag/Organisaties): bekende overheidsorganisaties, zoals gemeentes, provincies... * [Informatiecategorieën](#tag/Informatiecategorieen): de voorgeschreven categorieën voor de [DiWoo](https://standaarden.overheid.nl/diwoo/metadata)-standaard, optioneel uitgebreid met organisatiespecifieke categorieën. * [Thema's](#tag/Themas): een boomstructuur van ouder/kind-thema's om verder te beschrijven waar publicaties over gaan.  **Publicaties**  * [Publicaties](#tag/Publicaties): een publicatie is een logische eenheid van informatie die openbaar gemaakt moet worden - die kan één of meerdere documenten bevatten. Metadata wordt typisch gekoppeld aan de publicatie in plaats van aan de documenten die erin zitten. * [Documenten](#tag/Documenten): de daadwerkelijke bestanden/documenten die openbaar worden gemaakt en geïndexeerd in zoekmachines.  **Catalogi API**  De [Catalogi API](#tag/Catalogi-API)-eindpunten zijn een implementatiedetail van hoe deze API werkt. Client-applicaties hoeven hier niets mee te doen. Ze zijn nodig om de Documenten API te kunnen hergebruiken voor de daadwerkelijke opslag van bestanden.  ### Authenticatie  **API-sleutel**  De API-endpoints vereisen authenticatie waarvoor je een API-sleutel moet hebben. API-sleutels worden aangemaakt in de beheerinterface (zie de functionele documentatie).  Wanneer je een API-sleutel hebt, dan moet je deze meesturen in elk verzoek in een request header:  ``` Authorization: Token mijn-voorbeeld-api-sleutel ```  Vervang `mijn-voorbeeld-api-sleutel` door je eigen API-sleutel.  **Audit-headers**  Daarnaast vereisen de meeste endpoints dat er request headers worden meegestuurd voor de audit logs:  ``` Audit-User-ID: unieke-identificatie@example.com Audit-User-Representation: Alice B. Tables Audit-Remarks: Eigen publicaties ophalen ``` 
 *
 * The version of the OpenAPI document: 2.0.0 (1)
 * Contact: support@maykinmedia.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.gpppublicatiebank;

import java.util.Objects;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import jakarta.json.bind.annotation.JsonbProperty;
import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
  * Manage updates to metadata of Documents.
  */

public class DocumentUpdate  {
  public static final int OFFICIELE_TITEL_MAX_LENGTH = 255;
  public static final int VERKORTE_TITEL_MAX_LENGTH = 255;

  
  @JsonbProperty("uuid")
  protected UUID uuid;

 /**
  * De (primaire) unieke identificatie.
  */
  @JsonbProperty("identifier")
  protected String identifier;

 /**
  * De unieke identificatie van de publicatie.
  */
  @JsonbProperty("publicatie")
  protected UUID publicatie;

 /**
  * De set aan identificatiekenmerken horend bij dit document.
  */
  @JsonbProperty("kenmerken")
  protected List<@Valid DocumentIdentifier> kenmerken = null;

  @JsonbProperty("officieleTitel")
  protected String officieleTitel;

  @JsonbProperty("verkorteTitel")
  protected String verkorteTitel;

  @JsonbProperty("omschrijving")
  protected String omschrijving;

 /**
  *  Tijdens het aanmaken wordt de publicatiestatus overgenomen van het publicatie. De publicatie kan niet zelf ingevuld worden.  De mogelijke statuswijzigingen zijn:  * `\"\"` -> `\"concept\"` * `\"\"` -> `\"gepubliceerd\"` * `\"concept\"` -> `\"gepubliceerd\"` * `\"gepubliceerd\"` -> `\"ingetrokken\"`.  Let op dat bij sommige wijzigingen beperkt kunnen zijn door business-logica.  * `gepubliceerd` - Gepubliceerd * `concept` - Concept * `ingetrokken` - Ingetrokken
  */
  @JsonbProperty("publicatiestatus")
  protected PublicatiestatusEnum publicatiestatus;

 /**
  * Systeemdatum en -tijd wanneer de publicatie gepubliceerd werd.
  */
  @JsonbProperty("gepubliceerdOp")
  protected OffsetDateTime gepubliceerdOp;

 /**
  * Systeemdatum en -tijd wanneer de publicatie ingetrokken werd.
  */
  @JsonbProperty("ingetrokkenOp")
  protected OffsetDateTime ingetrokkenOp;

 /**
  * De datum waarop het document ontstaan is. Niet te verwarren met de registratiedatum - de creatiedatum valt typisch *voor* de registratiedatum.
  */
  @JsonbProperty("creatiedatum")
  protected LocalDate creatiedatum;

 /**
  * Indien van toepassing, datum wanneer het document door of namens de organisatie in ontvangst is genomen.
  */
  @JsonbProperty("ontvangstdatum")
  protected OffsetDateTime ontvangstdatum;

 /**
  * Indien van toepassing, datum waarop het document (door alle partijen) ondertekend is.
  */
  @JsonbProperty("datumOndertekend")
  protected OffsetDateTime datumOndertekend;

 /**
  * TODO - placeholder accepting anything, in the future this will be validated against a reference value list.
  */
  @JsonbProperty("bestandsformaat")
  protected String bestandsformaat;

 /**
  * Bestandsnaam 'op de harde schijf' van het document, bijvoorbeeld 'gelakt-verslag.pdf'.
  */
  @JsonbProperty("bestandsnaam")
  protected String bestandsnaam;

 /**
  * Bestandsgrootte op de harde schijf, in bytes.
  */
  @JsonbProperty("bestandsomvang")
  protected Integer bestandsomvang;

 /**
  * De persoon die het document aangemaakt heeft, afgeleid uit de auditlogs.  **Pas op**: Als je het veld opgeeft tijdens het aanmaken of bijwerken van het object, dan zal de eigenaarinformatie afwijken van de audit headers.
  */
  @JsonbProperty("eigenaar")
  protected Eigenaar eigenaar;

 /**
  * Systeemdatum en -tijd wanneer het document in de databank opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie, die typisch *voor* de registratiedatum valt.
  */
  @JsonbProperty("registratiedatum")
  protected OffsetDateTime registratiedatum;

 /**
  * Systeemdatum en -tijd wanneer het document laatst gewijzigd is in de database.
  */
  @JsonbProperty("laatstGewijzigdDatum")
  protected OffsetDateTime laatstGewijzigdDatum;

 /**
  * Geeft aan of alle bestandsdelen van het bestand ontvangen zijn en het document ontgrendeld en klaar voor gebruik is in de achterliggende Documenten-API.
  */
  @JsonbProperty("uploadVoltooid")
  protected Boolean uploadVoltooid;

  public DocumentUpdate() {
  }

 @JsonbCreator
  public DocumentUpdate(
    @JsonbProperty(value = "uuid") UUID uuid, 
    @JsonbProperty(value = "identifier") String identifier, 
    @JsonbProperty(value = "publicatie") UUID publicatie, 
    @JsonbProperty(value = "gepubliceerdOp") OffsetDateTime gepubliceerdOp, 
    @JsonbProperty(value = "ingetrokkenOp") OffsetDateTime ingetrokkenOp, 
    @JsonbProperty(value = "bestandsformaat") String bestandsformaat, 
    @JsonbProperty(value = "bestandsnaam") String bestandsnaam, 
    @JsonbProperty(value = "bestandsomvang") Integer bestandsomvang, 
    @JsonbProperty(value = "registratiedatum") OffsetDateTime registratiedatum, 
    @JsonbProperty(value = "laatstGewijzigdDatum") OffsetDateTime laatstGewijzigdDatum, 
    @JsonbProperty(value = "uploadVoltooid") Boolean uploadVoltooid
  ) {
    this.uuid = uuid;
    this.identifier = identifier;
    this.publicatie = publicatie;
    this.gepubliceerdOp = gepubliceerdOp;
    this.ingetrokkenOp = ingetrokkenOp;
    this.bestandsformaat = bestandsformaat;
    this.bestandsnaam = bestandsnaam;
    this.bestandsomvang = bestandsomvang;
    this.registratiedatum = registratiedatum;
    this.laatstGewijzigdDatum = laatstGewijzigdDatum;
    this.uploadVoltooid = uploadVoltooid;
  }
  
  /**
   * Get uuid
   * @return uuid
   **/
  public UUID getUuid() {
    return uuid;
  }


  /**
   * De (primaire) unieke identificatie.
   * @return identifier
   * @deprecated
   **/
  @Deprecated
  public String getIdentifier() {
    return identifier;
  }


  /**
   * De unieke identificatie van de publicatie.
   * @return publicatie
   **/
  public UUID getPublicatie() {
    return publicatie;
  }


  /**
   * De set aan identificatiekenmerken horend bij dit document.
   * @return kenmerken
   **/
  public List<@Valid DocumentIdentifier> getKenmerken() {
    return kenmerken;
  }

  /**
   * Set kenmerken
   */
  public void setKenmerken(List<@Valid DocumentIdentifier> kenmerken) {
    this.kenmerken = kenmerken;
  }

  public DocumentUpdate kenmerken(List<@Valid DocumentIdentifier> kenmerken) {
    this.kenmerken = kenmerken;
    return this;
  }

  public DocumentUpdate addKenmerkenItem(DocumentIdentifier kenmerkenItem) {
    if (this.kenmerken == null) {
      this.kenmerken = new ArrayList<>();
    }
    this.kenmerken.add(kenmerkenItem);
    return this;
  }

  /**
   * Get officieleTitel
   * @return officieleTitel
   **/
  @Size(max=OFFICIELE_TITEL_MAX_LENGTH)  public String getOfficieleTitel() {
    return officieleTitel;
  }

  /**
   * Set officieleTitel
   */
  public void setOfficieleTitel(String officieleTitel) {
    this.officieleTitel = officieleTitel;
  }

  public DocumentUpdate officieleTitel(String officieleTitel) {
    this.officieleTitel = officieleTitel;
    return this;
  }

  /**
   * Get verkorteTitel
   * @return verkorteTitel
   **/
  @Size(max=VERKORTE_TITEL_MAX_LENGTH)  public String getVerkorteTitel() {
    return verkorteTitel;
  }

  /**
   * Set verkorteTitel
   */
  public void setVerkorteTitel(String verkorteTitel) {
    this.verkorteTitel = verkorteTitel;
  }

  public DocumentUpdate verkorteTitel(String verkorteTitel) {
    this.verkorteTitel = verkorteTitel;
    return this;
  }

  /**
   * Get omschrijving
   * @return omschrijving
   **/
  public String getOmschrijving() {
    return omschrijving;
  }

  /**
   * Set omschrijving
   */
  public void setOmschrijving(String omschrijving) {
    this.omschrijving = omschrijving;
  }

  public DocumentUpdate omschrijving(String omschrijving) {
    this.omschrijving = omschrijving;
    return this;
  }

  /**
   *  Tijdens het aanmaken wordt de publicatiestatus overgenomen van het publicatie. De publicatie kan niet zelf ingevuld worden.  De mogelijke statuswijzigingen zijn:  * &#x60;\&quot;\&quot;&#x60; -&gt; &#x60;\&quot;concept\&quot;&#x60; * &#x60;\&quot;\&quot;&#x60; -&gt; &#x60;\&quot;gepubliceerd\&quot;&#x60; * &#x60;\&quot;concept\&quot;&#x60; -&gt; &#x60;\&quot;gepubliceerd\&quot;&#x60; * &#x60;\&quot;gepubliceerd\&quot;&#x60; -&gt; &#x60;\&quot;ingetrokken\&quot;&#x60;.  Let op dat bij sommige wijzigingen beperkt kunnen zijn door business-logica.  * &#x60;gepubliceerd&#x60; - Gepubliceerd * &#x60;concept&#x60; - Concept * &#x60;ingetrokken&#x60; - Ingetrokken
   * @return publicatiestatus
   **/
  @NotNull
  public PublicatiestatusEnum getPublicatiestatus() {
    return publicatiestatus;
  }

  /**
   * Set publicatiestatus
   */
  public void setPublicatiestatus(PublicatiestatusEnum publicatiestatus) {
    this.publicatiestatus = publicatiestatus;
  }

  public DocumentUpdate publicatiestatus(PublicatiestatusEnum publicatiestatus) {
    this.publicatiestatus = publicatiestatus;
    return this;
  }

  /**
   * Systeemdatum en -tijd wanneer de publicatie gepubliceerd werd.
   * @return gepubliceerdOp
   **/
  public OffsetDateTime getGepubliceerdOp() {
    return gepubliceerdOp;
  }


  /**
   * Systeemdatum en -tijd wanneer de publicatie ingetrokken werd.
   * @return ingetrokkenOp
   **/
  public OffsetDateTime getIngetrokkenOp() {
    return ingetrokkenOp;
  }


  /**
   * De datum waarop het document ontstaan is. Niet te verwarren met de registratiedatum - de creatiedatum valt typisch *voor* de registratiedatum.
   * @return creatiedatum
   **/
  public LocalDate getCreatiedatum() {
    return creatiedatum;
  }

  /**
   * Set creatiedatum
   */
  public void setCreatiedatum(LocalDate creatiedatum) {
    this.creatiedatum = creatiedatum;
  }

  public DocumentUpdate creatiedatum(LocalDate creatiedatum) {
    this.creatiedatum = creatiedatum;
    return this;
  }

  /**
   * Indien van toepassing, datum wanneer het document door of namens de organisatie in ontvangst is genomen.
   * @return ontvangstdatum
   **/
  public OffsetDateTime getOntvangstdatum() {
    return ontvangstdatum;
  }

  /**
   * Set ontvangstdatum
   */
  public void setOntvangstdatum(OffsetDateTime ontvangstdatum) {
    this.ontvangstdatum = ontvangstdatum;
  }

  public DocumentUpdate ontvangstdatum(OffsetDateTime ontvangstdatum) {
    this.ontvangstdatum = ontvangstdatum;
    return this;
  }

  /**
   * Indien van toepassing, datum waarop het document (door alle partijen) ondertekend is.
   * @return datumOndertekend
   **/
  public OffsetDateTime getDatumOndertekend() {
    return datumOndertekend;
  }

  /**
   * Set datumOndertekend
   */
  public void setDatumOndertekend(OffsetDateTime datumOndertekend) {
    this.datumOndertekend = datumOndertekend;
  }

  public DocumentUpdate datumOndertekend(OffsetDateTime datumOndertekend) {
    this.datumOndertekend = datumOndertekend;
    return this;
  }

  /**
   * TODO - placeholder accepting anything, in the future this will be validated against a reference value list.
   * @return bestandsformaat
   **/
  public String getBestandsformaat() {
    return bestandsformaat;
  }


  /**
   * Bestandsnaam &#39;op de harde schijf&#39; van het document, bijvoorbeeld &#39;gelakt-verslag.pdf&#39;.
   * @return bestandsnaam
   **/
  public String getBestandsnaam() {
    return bestandsnaam;
  }


  /**
   * Bestandsgrootte op de harde schijf, in bytes.
   * @return bestandsomvang
   **/
  public Integer getBestandsomvang() {
    return bestandsomvang;
  }


  /**
   * De persoon die het document aangemaakt heeft, afgeleid uit de auditlogs.  **Pas op**: Als je het veld opgeeft tijdens het aanmaken of bijwerken van het object, dan zal de eigenaarinformatie afwijken van de audit headers.
   * @return eigenaar
   **/
  public Eigenaar getEigenaar() {
    return eigenaar;
  }

  /**
   * Set eigenaar
   */
  public void setEigenaar(Eigenaar eigenaar) {
    this.eigenaar = eigenaar;
  }

  public DocumentUpdate eigenaar(Eigenaar eigenaar) {
    this.eigenaar = eigenaar;
    return this;
  }

  /**
   * Systeemdatum en -tijd wanneer het document in de databank opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie, die typisch *voor* de registratiedatum valt.
   * @return registratiedatum
   **/
  public OffsetDateTime getRegistratiedatum() {
    return registratiedatum;
  }


  /**
   * Systeemdatum en -tijd wanneer het document laatst gewijzigd is in de database.
   * @return laatstGewijzigdDatum
   **/
  public OffsetDateTime getLaatstGewijzigdDatum() {
    return laatstGewijzigdDatum;
  }


  /**
   * Geeft aan of alle bestandsdelen van het bestand ontvangen zijn en het document ontgrendeld en klaar voor gebruik is in de achterliggende Documenten-API.
   * @return uploadVoltooid
   **/
  public Boolean getUploadVoltooid() {
    return uploadVoltooid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentUpdate documentUpdate = (DocumentUpdate) o;
    return Objects.equals(this.uuid, documentUpdate.uuid) &&
        Objects.equals(this.identifier, documentUpdate.identifier) &&
        Objects.equals(this.publicatie, documentUpdate.publicatie) &&
        Objects.equals(this.kenmerken, documentUpdate.kenmerken) &&
        Objects.equals(this.officieleTitel, documentUpdate.officieleTitel) &&
        Objects.equals(this.verkorteTitel, documentUpdate.verkorteTitel) &&
        Objects.equals(this.omschrijving, documentUpdate.omschrijving) &&
        Objects.equals(this.publicatiestatus, documentUpdate.publicatiestatus) &&
        Objects.equals(this.gepubliceerdOp, documentUpdate.gepubliceerdOp) &&
        Objects.equals(this.ingetrokkenOp, documentUpdate.ingetrokkenOp) &&
        Objects.equals(this.creatiedatum, documentUpdate.creatiedatum) &&
        Objects.equals(this.ontvangstdatum, documentUpdate.ontvangstdatum) &&
        Objects.equals(this.datumOndertekend, documentUpdate.datumOndertekend) &&
        Objects.equals(this.bestandsformaat, documentUpdate.bestandsformaat) &&
        Objects.equals(this.bestandsnaam, documentUpdate.bestandsnaam) &&
        Objects.equals(this.bestandsomvang, documentUpdate.bestandsomvang) &&
        Objects.equals(this.eigenaar, documentUpdate.eigenaar) &&
        Objects.equals(this.registratiedatum, documentUpdate.registratiedatum) &&
        Objects.equals(this.laatstGewijzigdDatum, documentUpdate.laatstGewijzigdDatum) &&
        Objects.equals(this.uploadVoltooid, documentUpdate.uploadVoltooid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, identifier, publicatie, kenmerken, officieleTitel, verkorteTitel, omschrijving, publicatiestatus, gepubliceerdOp, ingetrokkenOp, creatiedatum, ontvangstdatum, datumOndertekend, bestandsformaat, bestandsnaam, bestandsomvang, eigenaar, registratiedatum, laatstGewijzigdDatum, uploadVoltooid);
  }

  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentUpdate {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    publicatie: ").append(toIndentedString(publicatie)).append("\n");
    sb.append("    kenmerken: ").append(toIndentedString(kenmerken)).append("\n");
    sb.append("    officieleTitel: ").append(toIndentedString(officieleTitel)).append("\n");
    sb.append("    verkorteTitel: ").append(toIndentedString(verkorteTitel)).append("\n");
    sb.append("    omschrijving: ").append(toIndentedString(omschrijving)).append("\n");
    sb.append("    publicatiestatus: ").append(toIndentedString(publicatiestatus)).append("\n");
    sb.append("    gepubliceerdOp: ").append(toIndentedString(gepubliceerdOp)).append("\n");
    sb.append("    ingetrokkenOp: ").append(toIndentedString(ingetrokkenOp)).append("\n");
    sb.append("    creatiedatum: ").append(toIndentedString(creatiedatum)).append("\n");
    sb.append("    ontvangstdatum: ").append(toIndentedString(ontvangstdatum)).append("\n");
    sb.append("    datumOndertekend: ").append(toIndentedString(datumOndertekend)).append("\n");
    sb.append("    bestandsformaat: ").append(toIndentedString(bestandsformaat)).append("\n");
    sb.append("    bestandsnaam: ").append(toIndentedString(bestandsnaam)).append("\n");
    sb.append("    bestandsomvang: ").append(toIndentedString(bestandsomvang)).append("\n");
    sb.append("    eigenaar: ").append(toIndentedString(eigenaar)).append("\n");
    sb.append("    registratiedatum: ").append(toIndentedString(registratiedatum)).append("\n");
    sb.append("    laatstGewijzigdDatum: ").append(toIndentedString(laatstGewijzigdDatum)).append("\n");
    sb.append("    uploadVoltooid: ").append(toIndentedString(uploadVoltooid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

