/**
 * WOO Publications
 *  ## Documentatie  De Woo-Publicatiebank API stelt client-applicaties in staat om publicaties van documenten te raadplegen en te beheren in het kader van een open overheid. Deze API-documentatie bevat drie logische 'domeinen'.  ### Domeinen  **Metadata**  Publicaties en hun gerelateerde documenten moeten bepaalde metadata hebben. De metadata-endpoints stellen client-applicaties in staat om beschikbare metadata op te halen (en in sommige resources ook aan te maken of bij te werken).  * [Organisaties](#tag/Organisaties): bekende overheidsorganisaties, zoals gemeentes, provincies... * [Informatiecategorieën](#tag/Informatiecategorieen): de voorgeschreven categorieën voor de [DiWoo](https://standaarden.overheid.nl/diwoo/metadata)-standaard, optioneel uitgebreid met organisatiespecifieke categorieën. * [Thema's](#tag/Themas): een boomstructuur van ouder/kind-thema's om verder te beschrijven waar publicaties over gaan.  **Publicaties**  * [Publicaties](#tag/Publicaties): een publicatie is een logische eenheid van informatie die openbaar gemaakt moet worden - die kan één of meerdere documenten bevatten. Metadata wordt typisch gekoppeld aan de publicatie in plaats van aan de documenten die erin zitten. * [Documenten](#tag/Documenten): de daadwerkelijke bestanden/documenten die openbaar worden gemaakt en geïndexeerd in zoekmachines.  **Catalogi API**  De [Catalogi API](#tag/Catalogi-API)-eindpunten zijn een implementatiedetail van hoe deze API werkt. Client-applicaties hoeven hier niets mee te doen. Ze zijn nodig om de Documenten API te kunnen hergebruiken voor de daadwerkelijke opslag van bestanden.  ### Authenticatie  **API-sleutel**  De API-endpoints vereisen authenticatie waarvoor je een API-sleutel moet hebben. API-sleutels worden aangemaakt in de beheerinterface (zie de functionele documentatie).  Wanneer je een API-sleutel hebt, dan moet je deze meesturen in elk verzoek in een request header:  ``` Authorization: Token mijn-voorbeeld-api-sleutel ```  Vervang `mijn-voorbeeld-api-sleutel` door je eigen API-sleutel.  **Audit-headers**  Daarnaast vereisen de meeste endpoints dat er request headers worden meegestuurd voor de audit logs:  ``` Audit-User-ID: unieke-identificatie@example.com Audit-User-Representation: Alice B. Tables Audit-Remarks: Eigen publicaties ophalen ``` 
 *
 * The version of the OpenAPI document: 2.0.0 (1)
 * Contact: support@maykinmedia.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.gpppublicatiebank;

import java.util.Objects;

import jakarta.json.bind.annotation.JsonbProperty;

/**
  * Encapsulate the create/update validation logic and behaviour.  The publication serializer is split in read/write parts so that the output can be properly documented in the API schema. Writes for concept publications are much more relaxed that published publications.  The write serializer in turn is a polymorphic serializer, covering the validation behaviour for concept/published publication states.  .. todo:: test validation behaviour of an incomplete concept publication being changed to published.
  */

public class PublicationWriteShared  {

  
 /**
  *  **Waarschuwing**: je kan geen ingetrokken publicatie aanmaken.  **Waarschuwing**: wanneer je een publicatie intrekt, dan worden ook de gerelateerde gepubliceerde documenten ingetrokken.  * `gepubliceerd` - Gepubliceerd * `concept` - Concept * `ingetrokken` - Ingetrokken
  */
  @JsonbProperty("publicatiestatus")
  protected PublicatiestatusEnum publicatiestatus = PublicatiestatusEnum.GEPUBLICEERD;

  /**
   *  **Waarschuwing**: je kan geen ingetrokken publicatie aanmaken.  **Waarschuwing**: wanneer je een publicatie intrekt, dan worden ook de gerelateerde gepubliceerde documenten ingetrokken.  * &#x60;gepubliceerd&#x60; - Gepubliceerd * &#x60;concept&#x60; - Concept * &#x60;ingetrokken&#x60; - Ingetrokken
   * @return publicatiestatus
   **/
  public PublicatiestatusEnum getPublicatiestatus() {
    return publicatiestatus;
  }

  /**
   * Set publicatiestatus
   */
  public void setPublicatiestatus(PublicatiestatusEnum publicatiestatus) {
    this.publicatiestatus = publicatiestatus;
  }

  public PublicationWriteShared publicatiestatus(PublicatiestatusEnum publicatiestatus) {
    this.publicatiestatus = publicatiestatus;
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicationWriteShared publicationWriteShared = (PublicationWriteShared) o;
    return Objects.equals(this.publicatiestatus, publicationWriteShared.publicatiestatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicatiestatus);
  }

  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicationWriteShared {\n");
    
    sb.append("    publicatiestatus: ").append(toIndentedString(publicatiestatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

