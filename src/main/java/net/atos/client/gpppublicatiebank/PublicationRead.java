/**
 * WOO Publications
 *  ## Documentatie  De Woo-Publicatiebank API stelt client-applicaties in staat om publicaties van documenten te raadplegen en te beheren in het kader van een open overheid. Deze API-documentatie bevat drie logische 'domeinen'.  ### Domeinen  **Metadata**  Publicaties en hun gerelateerde documenten moeten bepaalde metadata hebben. De metadata-endpoints stellen client-applicaties in staat om beschikbare metadata op te halen (en in sommige resources ook aan te maken of bij te werken).  * [Organisaties](#tag/Organisaties): bekende overheidsorganisaties, zoals gemeentes, provincies... * [Informatiecategorieën](#tag/Informatiecategorieen): de voorgeschreven categorieën voor de [DiWoo](https://standaarden.overheid.nl/diwoo/metadata)-standaard, optioneel uitgebreid met organisatiespecifieke categorieën. * [Thema's](#tag/Themas): een boomstructuur van ouder/kind-thema's om verder te beschrijven waar publicaties over gaan.  **Publicaties**  * [Publicaties](#tag/Publicaties): een publicatie is een logische eenheid van informatie die openbaar gemaakt moet worden - die kan één of meerdere documenten bevatten. Metadata wordt typisch gekoppeld aan de publicatie in plaats van aan de documenten die erin zitten. * [Documenten](#tag/Documenten): de daadwerkelijke bestanden/documenten die openbaar worden gemaakt en geïndexeerd in zoekmachines.  **Catalogi API**  De [Catalogi API](#tag/Catalogi-API)-eindpunten zijn een implementatiedetail van hoe deze API werkt. Client-applicaties hoeven hier niets mee te doen. Ze zijn nodig om de Documenten API te kunnen hergebruiken voor de daadwerkelijke opslag van bestanden.  ### Authenticatie  **API-sleutel**  De API-endpoints vereisen authenticatie waarvoor je een API-sleutel moet hebben. API-sleutels worden aangemaakt in de beheerinterface (zie de functionele documentatie).  Wanneer je een API-sleutel hebt, dan moet je deze meesturen in elk verzoek in een request header:  ``` Authorization: Token mijn-voorbeeld-api-sleutel ```  Vervang `mijn-voorbeeld-api-sleutel` door je eigen API-sleutel.  **Audit-headers**  Daarnaast vereisen de meeste endpoints dat er request headers worden meegestuurd voor de audit logs:  ``` Audit-User-ID: unieke-identificatie@example.com Audit-User-Representation: Alice B. Tables Audit-Remarks: Eigen publicaties ophalen ``` 
 *
 * The version of the OpenAPI document: 2.0.0 (1)
 * Contact: support@maykinmedia.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.gpppublicatiebank;

import java.util.Objects;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import jakarta.json.bind.annotation.JsonbProperty;
import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
  * Encapsulate the read behaviour for publication serialization.  For read operations, we're much closer to the database model and can provide stronger guarantees about the returned data, leading to stricter schema/type definitions.
  */

public class PublicationRead  {
  public static final int OFFICIELE_TITEL_MAX_LENGTH = 255;
  public static final int VERKORTE_TITEL_MAX_LENGTH = 255;
  public static final int BRON_BEWAARTERMIJN_MAX_LENGTH = 255;
  public static final int SELECTIECATEGORIE_MAX_LENGTH = 255;

  
  @JsonbProperty("uuid")
  protected UUID uuid;

  @JsonbProperty("urlPublicatieIntern")
  protected WerkEenPublicatieInZijnGeheelBij urlPublicatieIntern;

  @JsonbProperty("urlPublicatieExtern")
  protected ExternePublicatieURL urlPublicatieExtern;

 /**
  * De informatiecategorie verduidelijkt de soort informatie die in de publicatie voorkomt.
  */
  @JsonbProperty("informatieCategorieen")
  protected List<UUID> informatieCategorieen = new ArrayList<>();

 /**
  * De informatiecategorieën voor in de sitemap.
  */
  @JsonbProperty("diWooInformatieCategorieen")
  protected List<UUID> diWooInformatieCategorieen = new ArrayList<>();

 /**
  * Onderwerpen gaan over maatschappelijk relevante informatie die meerdere publicaties omvatten. Ze kunnen tientallen jaren relevant blijven en overstijgen de typische levensduur van een enkele publicatie.
  */
  @JsonbProperty("onderwerpen")
  protected List<UUID> onderwerpen = new ArrayList<>();

 /**
  * De organisatie die de publicatie publiceert.De 'publisher' kan `null` zijn voor conceptpublicaties.
  */
  @JsonbProperty("publisher")
  protected UUID publisher;

 /**
  * De organisatie die verantwoordelijk is voor de publicatie en haar inhoud.
  */
  @JsonbProperty("verantwoordelijke")
  protected UUID verantwoordelijke;

 /**
  * De organisatie die de publicatie en haar inhoud opgesteld heeft.
  */
  @JsonbProperty("opsteller")
  protected UUID opsteller;

 /**
  * De set aan identificatiekenmerken horend bij deze publicatie.
  */
  @JsonbProperty("kenmerken")
  protected List<@Valid PublicationIdentifier> kenmerken = new ArrayList<>();

  @JsonbProperty("officieleTitel")
  protected String officieleTitel;

  @JsonbProperty("verkorteTitel")
  protected String verkorteTitel;

  @JsonbProperty("omschrijving")
  protected String omschrijving;

 /**
  * De persoon die het document aangemaakt heeft, afgeleid uit de auditlogs.  **Pas op**: Als je het veld opgeeft tijdens het aanmaken of bijwerken van het object, dan zal de eigenaarinformatie afwijken van de audit headers.
  */
  @JsonbProperty("eigenaar")
  protected Eigenaar eigenaar;

 /**
  *  **Waarschuwing**: je kan geen ingetrokken publicatie aanmaken.  **Waarschuwing**: wanneer je een publicatie intrekt, dan worden ook de gerelateerde gepubliceerde documenten ingetrokken.  De mogelijke statuswijzigingen zijn:  * `\"\"` -> `\"concept\"` * `\"\"` -> `\"gepubliceerd\"` * `\"concept\"` -> `\"gepubliceerd\"` * `\"gepubliceerd\"` -> `\"ingetrokken\"`.  Let op dat bij sommige wijzigingen beperkt kunnen zijn door business-logica.  * `gepubliceerd` - Gepubliceerd * `concept` - Concept * `ingetrokken` - Ingetrokken
  */
  @JsonbProperty("publicatiestatus")
  protected PublicatiestatusEnum publicatiestatus = PublicatiestatusEnum.GEPUBLICEERD;

 /**
  * Systeemdatum en -tijd wanneer de publicatie gepubliceerd werd.
  */
  @JsonbProperty("gepubliceerdOp")
  protected OffsetDateTime gepubliceerdOp;

 /**
  * Systeemdatum en -tijd wanneer de publicatie ingetrokken werd.
  */
  @JsonbProperty("ingetrokkenOp")
  protected OffsetDateTime ingetrokkenOp;

 /**
  * Systeemdatum en -tijd wanneer de publicatie in de databank opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie, die typisch *voor* de registratiedatum valt.
  */
  @JsonbProperty("registratiedatum")
  protected OffsetDateTime registratiedatum;

 /**
  * Systeemdatum en -tijd wanneer de publicatie laatst gewijzigd is in de database.
  */
  @JsonbProperty("laatstGewijzigdDatum")
  protected OffsetDateTime laatstGewijzigdDatum;

 /**
  * De datum waarop de rechten en plichten vastgelegd in deze documenten in werking treden.
  */
  @JsonbProperty("datumBeginGeldigheid")
  protected LocalDate datumBeginGeldigheid;

 /**
  * De datum waarop de rechten en plichten vastgelegd in deze documenten (zijn) komen te vervallen.
  */
  @JsonbProperty("datumEindeGeldigheid")
  protected LocalDate datumEindeGeldigheid;

 /**
  * De bron waaruit de bewaartermijn bepaald is (bjivoorbeeld: Selectielijst gemeenten 2020).
  */
  @JsonbProperty("bronBewaartermijn")
  protected String bronBewaartermijn;

 /**
  * De categorie waaruit de bewaartermijn bepaald is, zoals deze in de bron bewaartermijn voorkomt (bijvoorbeeld: 20.1.2).
  */
  @JsonbProperty("selectiecategorie")
  protected String selectiecategorie;

  @JsonbProperty("archiefnominatie")
  protected PublicationReadArchiefnominatie archiefnominatie;

 /**
  * Datum waarop de publicatie overgebracht of definitief vernietigd zal worden.
  */
  @JsonbProperty("archiefactiedatum")
  protected LocalDate archiefactiedatum;

  @JsonbProperty("toelichtingBewaartermijn")
  protected String toelichtingBewaartermijn;

  public PublicationRead() {
  }

 @JsonbCreator
  public PublicationRead(
    @JsonbProperty(value = "uuid") UUID uuid, 
    @JsonbProperty(value = "diWooInformatieCategorieen") List<UUID> diWooInformatieCategorieen, 
    @JsonbProperty(value = "gepubliceerdOp") OffsetDateTime gepubliceerdOp, 
    @JsonbProperty(value = "ingetrokkenOp") OffsetDateTime ingetrokkenOp, 
    @JsonbProperty(value = "registratiedatum") OffsetDateTime registratiedatum, 
    @JsonbProperty(value = "laatstGewijzigdDatum") OffsetDateTime laatstGewijzigdDatum
  ) {
    this.uuid = uuid;
    this.diWooInformatieCategorieen = diWooInformatieCategorieen;
    this.gepubliceerdOp = gepubliceerdOp;
    this.ingetrokkenOp = ingetrokkenOp;
    this.registratiedatum = registratiedatum;
    this.laatstGewijzigdDatum = laatstGewijzigdDatum;
  }
  
  /**
   * Get uuid
   * @return uuid
   **/
  public UUID getUuid() {
    return uuid;
  }


  /**
   * Get urlPublicatieIntern
   * @return urlPublicatieIntern
   **/
  @NotNull
  public WerkEenPublicatieInZijnGeheelBij getUrlPublicatieIntern() {
    return urlPublicatieIntern;
  }

  /**
   * Set urlPublicatieIntern
   */
  public void setUrlPublicatieIntern(WerkEenPublicatieInZijnGeheelBij urlPublicatieIntern) {
    this.urlPublicatieIntern = urlPublicatieIntern;
  }

  public PublicationRead urlPublicatieIntern(WerkEenPublicatieInZijnGeheelBij urlPublicatieIntern) {
    this.urlPublicatieIntern = urlPublicatieIntern;
    return this;
  }

  /**
   * Get urlPublicatieExtern
   * @return urlPublicatieExtern
   **/
  @NotNull
  public ExternePublicatieURL getUrlPublicatieExtern() {
    return urlPublicatieExtern;
  }

  /**
   * Set urlPublicatieExtern
   */
  public void setUrlPublicatieExtern(ExternePublicatieURL urlPublicatieExtern) {
    this.urlPublicatieExtern = urlPublicatieExtern;
  }

  public PublicationRead urlPublicatieExtern(ExternePublicatieURL urlPublicatieExtern) {
    this.urlPublicatieExtern = urlPublicatieExtern;
    return this;
  }

  /**
   * De informatiecategorie verduidelijkt de soort informatie die in de publicatie voorkomt.
   * @return informatieCategorieen
   **/
  @NotNull
  public List<UUID> getInformatieCategorieen() {
    return informatieCategorieen;
  }

  /**
   * Set informatieCategorieen
   */
  public void setInformatieCategorieen(List<UUID> informatieCategorieen) {
    this.informatieCategorieen = informatieCategorieen;
  }

  public PublicationRead informatieCategorieen(List<UUID> informatieCategorieen) {
    this.informatieCategorieen = informatieCategorieen;
    return this;
  }

  public PublicationRead addInformatieCategorieenItem(UUID informatieCategorieenItem) {
    if (this.informatieCategorieen == null) {
      this.informatieCategorieen = new ArrayList<>();
    }
    this.informatieCategorieen.add(informatieCategorieenItem);
    return this;
  }

  /**
   * De informatiecategorieën voor in de sitemap.
   * @return diWooInformatieCategorieen
   **/
  public List<UUID> getDiWooInformatieCategorieen() {
    return diWooInformatieCategorieen;
  }


  /**
   * Onderwerpen gaan over maatschappelijk relevante informatie die meerdere publicaties omvatten. Ze kunnen tientallen jaren relevant blijven en overstijgen de typische levensduur van een enkele publicatie.
   * @return onderwerpen
   **/
  @NotNull
  public List<UUID> getOnderwerpen() {
    return onderwerpen;
  }

  /**
   * Set onderwerpen
   */
  public void setOnderwerpen(List<UUID> onderwerpen) {
    this.onderwerpen = onderwerpen;
  }

  public PublicationRead onderwerpen(List<UUID> onderwerpen) {
    this.onderwerpen = onderwerpen;
    return this;
  }

  public PublicationRead addOnderwerpenItem(UUID onderwerpenItem) {
    if (this.onderwerpen == null) {
      this.onderwerpen = new ArrayList<>();
    }
    this.onderwerpen.add(onderwerpenItem);
    return this;
  }

  /**
   * De organisatie die de publicatie publiceert.De &#39;publisher&#39; kan &#x60;null&#x60; zijn voor conceptpublicaties.
   * @return publisher
   **/
  @NotNull
  public UUID getPublisher() {
    return publisher;
  }

  /**
   * Set publisher
   */
  public void setPublisher(UUID publisher) {
    this.publisher = publisher;
  }

  public PublicationRead publisher(UUID publisher) {
    this.publisher = publisher;
    return this;
  }

  /**
   * De organisatie die verantwoordelijk is voor de publicatie en haar inhoud.
   * @return verantwoordelijke
   **/
  @NotNull
  public UUID getVerantwoordelijke() {
    return verantwoordelijke;
  }

  /**
   * Set verantwoordelijke
   */
  public void setVerantwoordelijke(UUID verantwoordelijke) {
    this.verantwoordelijke = verantwoordelijke;
  }

  public PublicationRead verantwoordelijke(UUID verantwoordelijke) {
    this.verantwoordelijke = verantwoordelijke;
    return this;
  }

  /**
   * De organisatie die de publicatie en haar inhoud opgesteld heeft.
   * @return opsteller
   **/
  @NotNull
  public UUID getOpsteller() {
    return opsteller;
  }

  /**
   * Set opsteller
   */
  public void setOpsteller(UUID opsteller) {
    this.opsteller = opsteller;
  }

  public PublicationRead opsteller(UUID opsteller) {
    this.opsteller = opsteller;
    return this;
  }

  /**
   * De set aan identificatiekenmerken horend bij deze publicatie.
   * @return kenmerken
   **/
  @NotNull
  public List<@Valid PublicationIdentifier> getKenmerken() {
    return kenmerken;
  }

  /**
   * Set kenmerken
   */
  public void setKenmerken(List<@Valid PublicationIdentifier> kenmerken) {
    this.kenmerken = kenmerken;
  }

  public PublicationRead kenmerken(List<@Valid PublicationIdentifier> kenmerken) {
    this.kenmerken = kenmerken;
    return this;
  }

  public PublicationRead addKenmerkenItem(PublicationIdentifier kenmerkenItem) {
    if (this.kenmerken == null) {
      this.kenmerken = new ArrayList<>();
    }
    this.kenmerken.add(kenmerkenItem);
    return this;
  }

  /**
   * Get officieleTitel
   * @return officieleTitel
   **/
  @NotNull
  @Size(max=OFFICIELE_TITEL_MAX_LENGTH)  public String getOfficieleTitel() {
    return officieleTitel;
  }

  /**
   * Set officieleTitel
   */
  public void setOfficieleTitel(String officieleTitel) {
    this.officieleTitel = officieleTitel;
  }

  public PublicationRead officieleTitel(String officieleTitel) {
    this.officieleTitel = officieleTitel;
    return this;
  }

  /**
   * Get verkorteTitel
   * @return verkorteTitel
   **/
  @NotNull
  @Size(max=VERKORTE_TITEL_MAX_LENGTH)  public String getVerkorteTitel() {
    return verkorteTitel;
  }

  /**
   * Set verkorteTitel
   */
  public void setVerkorteTitel(String verkorteTitel) {
    this.verkorteTitel = verkorteTitel;
  }

  public PublicationRead verkorteTitel(String verkorteTitel) {
    this.verkorteTitel = verkorteTitel;
    return this;
  }

  /**
   * Get omschrijving
   * @return omschrijving
   **/
  @NotNull
  public String getOmschrijving() {
    return omschrijving;
  }

  /**
   * Set omschrijving
   */
  public void setOmschrijving(String omschrijving) {
    this.omschrijving = omschrijving;
  }

  public PublicationRead omschrijving(String omschrijving) {
    this.omschrijving = omschrijving;
    return this;
  }

  /**
   * De persoon die het document aangemaakt heeft, afgeleid uit de auditlogs.  **Pas op**: Als je het veld opgeeft tijdens het aanmaken of bijwerken van het object, dan zal de eigenaarinformatie afwijken van de audit headers.
   * @return eigenaar
   **/
  @NotNull
  public Eigenaar getEigenaar() {
    return eigenaar;
  }

  /**
   * Set eigenaar
   */
  public void setEigenaar(Eigenaar eigenaar) {
    this.eigenaar = eigenaar;
  }

  public PublicationRead eigenaar(Eigenaar eigenaar) {
    this.eigenaar = eigenaar;
    return this;
  }

  /**
   *  **Waarschuwing**: je kan geen ingetrokken publicatie aanmaken.  **Waarschuwing**: wanneer je een publicatie intrekt, dan worden ook de gerelateerde gepubliceerde documenten ingetrokken.  De mogelijke statuswijzigingen zijn:  * &#x60;\&quot;\&quot;&#x60; -&gt; &#x60;\&quot;concept\&quot;&#x60; * &#x60;\&quot;\&quot;&#x60; -&gt; &#x60;\&quot;gepubliceerd\&quot;&#x60; * &#x60;\&quot;concept\&quot;&#x60; -&gt; &#x60;\&quot;gepubliceerd\&quot;&#x60; * &#x60;\&quot;gepubliceerd\&quot;&#x60; -&gt; &#x60;\&quot;ingetrokken\&quot;&#x60;.  Let op dat bij sommige wijzigingen beperkt kunnen zijn door business-logica.  * &#x60;gepubliceerd&#x60; - Gepubliceerd * &#x60;concept&#x60; - Concept * &#x60;ingetrokken&#x60; - Ingetrokken
   * @return publicatiestatus
   **/
  @NotNull
  public PublicatiestatusEnum getPublicatiestatus() {
    return publicatiestatus;
  }

  /**
   * Set publicatiestatus
   */
  public void setPublicatiestatus(PublicatiestatusEnum publicatiestatus) {
    this.publicatiestatus = publicatiestatus;
  }

  public PublicationRead publicatiestatus(PublicatiestatusEnum publicatiestatus) {
    this.publicatiestatus = publicatiestatus;
    return this;
  }

  /**
   * Systeemdatum en -tijd wanneer de publicatie gepubliceerd werd.
   * @return gepubliceerdOp
   **/
  public OffsetDateTime getGepubliceerdOp() {
    return gepubliceerdOp;
  }


  /**
   * Systeemdatum en -tijd wanneer de publicatie ingetrokken werd.
   * @return ingetrokkenOp
   **/
  public OffsetDateTime getIngetrokkenOp() {
    return ingetrokkenOp;
  }


  /**
   * Systeemdatum en -tijd wanneer de publicatie in de databank opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie, die typisch *voor* de registratiedatum valt.
   * @return registratiedatum
   **/
  public OffsetDateTime getRegistratiedatum() {
    return registratiedatum;
  }


  /**
   * Systeemdatum en -tijd wanneer de publicatie laatst gewijzigd is in de database.
   * @return laatstGewijzigdDatum
   **/
  public OffsetDateTime getLaatstGewijzigdDatum() {
    return laatstGewijzigdDatum;
  }


  /**
   * De datum waarop de rechten en plichten vastgelegd in deze documenten in werking treden.
   * @return datumBeginGeldigheid
   **/
  @NotNull
  public LocalDate getDatumBeginGeldigheid() {
    return datumBeginGeldigheid;
  }

  /**
   * Set datumBeginGeldigheid
   */
  public void setDatumBeginGeldigheid(LocalDate datumBeginGeldigheid) {
    this.datumBeginGeldigheid = datumBeginGeldigheid;
  }

  public PublicationRead datumBeginGeldigheid(LocalDate datumBeginGeldigheid) {
    this.datumBeginGeldigheid = datumBeginGeldigheid;
    return this;
  }

  /**
   * De datum waarop de rechten en plichten vastgelegd in deze documenten (zijn) komen te vervallen.
   * @return datumEindeGeldigheid
   **/
  @NotNull
  public LocalDate getDatumEindeGeldigheid() {
    return datumEindeGeldigheid;
  }

  /**
   * Set datumEindeGeldigheid
   */
  public void setDatumEindeGeldigheid(LocalDate datumEindeGeldigheid) {
    this.datumEindeGeldigheid = datumEindeGeldigheid;
  }

  public PublicationRead datumEindeGeldigheid(LocalDate datumEindeGeldigheid) {
    this.datumEindeGeldigheid = datumEindeGeldigheid;
    return this;
  }

  /**
   * De bron waaruit de bewaartermijn bepaald is (bjivoorbeeld: Selectielijst gemeenten 2020).
   * @return bronBewaartermijn
   **/
  @NotNull
  @Size(max=BRON_BEWAARTERMIJN_MAX_LENGTH)  public String getBronBewaartermijn() {
    return bronBewaartermijn;
  }

  /**
   * Set bronBewaartermijn
   */
  public void setBronBewaartermijn(String bronBewaartermijn) {
    this.bronBewaartermijn = bronBewaartermijn;
  }

  public PublicationRead bronBewaartermijn(String bronBewaartermijn) {
    this.bronBewaartermijn = bronBewaartermijn;
    return this;
  }

  /**
   * De categorie waaruit de bewaartermijn bepaald is, zoals deze in de bron bewaartermijn voorkomt (bijvoorbeeld: 20.1.2).
   * @return selectiecategorie
   **/
  @NotNull
  @Size(max=SELECTIECATEGORIE_MAX_LENGTH)  public String getSelectiecategorie() {
    return selectiecategorie;
  }

  /**
   * Set selectiecategorie
   */
  public void setSelectiecategorie(String selectiecategorie) {
    this.selectiecategorie = selectiecategorie;
  }

  public PublicationRead selectiecategorie(String selectiecategorie) {
    this.selectiecategorie = selectiecategorie;
    return this;
  }

  /**
   * Get archiefnominatie
   * @return archiefnominatie
   **/
  @NotNull
  public PublicationReadArchiefnominatie getArchiefnominatie() {
    return archiefnominatie;
  }

  /**
   * Set archiefnominatie
   */
  public void setArchiefnominatie(PublicationReadArchiefnominatie archiefnominatie) {
    this.archiefnominatie = archiefnominatie;
  }

  public PublicationRead archiefnominatie(PublicationReadArchiefnominatie archiefnominatie) {
    this.archiefnominatie = archiefnominatie;
    return this;
  }

  /**
   * Datum waarop de publicatie overgebracht of definitief vernietigd zal worden.
   * @return archiefactiedatum
   **/
  @NotNull
  public LocalDate getArchiefactiedatum() {
    return archiefactiedatum;
  }

  /**
   * Set archiefactiedatum
   */
  public void setArchiefactiedatum(LocalDate archiefactiedatum) {
    this.archiefactiedatum = archiefactiedatum;
  }

  public PublicationRead archiefactiedatum(LocalDate archiefactiedatum) {
    this.archiefactiedatum = archiefactiedatum;
    return this;
  }

  /**
   * Get toelichtingBewaartermijn
   * @return toelichtingBewaartermijn
   **/
  @NotNull
  public String getToelichtingBewaartermijn() {
    return toelichtingBewaartermijn;
  }

  /**
   * Set toelichtingBewaartermijn
   */
  public void setToelichtingBewaartermijn(String toelichtingBewaartermijn) {
    this.toelichtingBewaartermijn = toelichtingBewaartermijn;
  }

  public PublicationRead toelichtingBewaartermijn(String toelichtingBewaartermijn) {
    this.toelichtingBewaartermijn = toelichtingBewaartermijn;
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicationRead publicationRead = (PublicationRead) o;
    return Objects.equals(this.uuid, publicationRead.uuid) &&
        Objects.equals(this.urlPublicatieIntern, publicationRead.urlPublicatieIntern) &&
        Objects.equals(this.urlPublicatieExtern, publicationRead.urlPublicatieExtern) &&
        Objects.equals(this.informatieCategorieen, publicationRead.informatieCategorieen) &&
        Objects.equals(this.diWooInformatieCategorieen, publicationRead.diWooInformatieCategorieen) &&
        Objects.equals(this.onderwerpen, publicationRead.onderwerpen) &&
        Objects.equals(this.publisher, publicationRead.publisher) &&
        Objects.equals(this.verantwoordelijke, publicationRead.verantwoordelijke) &&
        Objects.equals(this.opsteller, publicationRead.opsteller) &&
        Objects.equals(this.kenmerken, publicationRead.kenmerken) &&
        Objects.equals(this.officieleTitel, publicationRead.officieleTitel) &&
        Objects.equals(this.verkorteTitel, publicationRead.verkorteTitel) &&
        Objects.equals(this.omschrijving, publicationRead.omschrijving) &&
        Objects.equals(this.eigenaar, publicationRead.eigenaar) &&
        Objects.equals(this.publicatiestatus, publicationRead.publicatiestatus) &&
        Objects.equals(this.gepubliceerdOp, publicationRead.gepubliceerdOp) &&
        Objects.equals(this.ingetrokkenOp, publicationRead.ingetrokkenOp) &&
        Objects.equals(this.registratiedatum, publicationRead.registratiedatum) &&
        Objects.equals(this.laatstGewijzigdDatum, publicationRead.laatstGewijzigdDatum) &&
        Objects.equals(this.datumBeginGeldigheid, publicationRead.datumBeginGeldigheid) &&
        Objects.equals(this.datumEindeGeldigheid, publicationRead.datumEindeGeldigheid) &&
        Objects.equals(this.bronBewaartermijn, publicationRead.bronBewaartermijn) &&
        Objects.equals(this.selectiecategorie, publicationRead.selectiecategorie) &&
        Objects.equals(this.archiefnominatie, publicationRead.archiefnominatie) &&
        Objects.equals(this.archiefactiedatum, publicationRead.archiefactiedatum) &&
        Objects.equals(this.toelichtingBewaartermijn, publicationRead.toelichtingBewaartermijn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, urlPublicatieIntern, urlPublicatieExtern, informatieCategorieen, diWooInformatieCategorieen, onderwerpen, publisher, verantwoordelijke, opsteller, kenmerken, officieleTitel, verkorteTitel, omschrijving, eigenaar, publicatiestatus, gepubliceerdOp, ingetrokkenOp, registratiedatum, laatstGewijzigdDatum, datumBeginGeldigheid, datumEindeGeldigheid, bronBewaartermijn, selectiecategorie, archiefnominatie, archiefactiedatum, toelichtingBewaartermijn);
  }

  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicationRead {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    urlPublicatieIntern: ").append(toIndentedString(urlPublicatieIntern)).append("\n");
    sb.append("    urlPublicatieExtern: ").append(toIndentedString(urlPublicatieExtern)).append("\n");
    sb.append("    informatieCategorieen: ").append(toIndentedString(informatieCategorieen)).append("\n");
    sb.append("    diWooInformatieCategorieen: ").append(toIndentedString(diWooInformatieCategorieen)).append("\n");
    sb.append("    onderwerpen: ").append(toIndentedString(onderwerpen)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    verantwoordelijke: ").append(toIndentedString(verantwoordelijke)).append("\n");
    sb.append("    opsteller: ").append(toIndentedString(opsteller)).append("\n");
    sb.append("    kenmerken: ").append(toIndentedString(kenmerken)).append("\n");
    sb.append("    officieleTitel: ").append(toIndentedString(officieleTitel)).append("\n");
    sb.append("    verkorteTitel: ").append(toIndentedString(verkorteTitel)).append("\n");
    sb.append("    omschrijving: ").append(toIndentedString(omschrijving)).append("\n");
    sb.append("    eigenaar: ").append(toIndentedString(eigenaar)).append("\n");
    sb.append("    publicatiestatus: ").append(toIndentedString(publicatiestatus)).append("\n");
    sb.append("    gepubliceerdOp: ").append(toIndentedString(gepubliceerdOp)).append("\n");
    sb.append("    ingetrokkenOp: ").append(toIndentedString(ingetrokkenOp)).append("\n");
    sb.append("    registratiedatum: ").append(toIndentedString(registratiedatum)).append("\n");
    sb.append("    laatstGewijzigdDatum: ").append(toIndentedString(laatstGewijzigdDatum)).append("\n");
    sb.append("    datumBeginGeldigheid: ").append(toIndentedString(datumBeginGeldigheid)).append("\n");
    sb.append("    datumEindeGeldigheid: ").append(toIndentedString(datumEindeGeldigheid)).append("\n");
    sb.append("    bronBewaartermijn: ").append(toIndentedString(bronBewaartermijn)).append("\n");
    sb.append("    selectiecategorie: ").append(toIndentedString(selectiecategorie)).append("\n");
    sb.append("    archiefnominatie: ").append(toIndentedString(archiefnominatie)).append("\n");
    sb.append("    archiefactiedatum: ").append(toIndentedString(archiefactiedatum)).append("\n");
    sb.append("    toelichtingBewaartermijn: ").append(toIndentedString(toelichtingBewaartermijn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

