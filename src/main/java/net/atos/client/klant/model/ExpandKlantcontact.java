/*
 * SPDX-FileCopyrightText: 2024 Lifely
 * SPDX-License-Identifier: EUPL-1.2+
 */

/**
 * klantinteracties
 * **Warning: Difference between `PUT` and `PATCH`** Both `PUT` and `PATCH` methods can be used to update the fields in a resource, but
 * there is a key difference in how they handle required fields: * The `PUT` method requires you to specify **all mandatory fields** when
 * updating a resource. If any mandatory field is missing, the update will fail. Optional fields are left unchanged if they are not
 * specified. * The `PATCH` method, on the other hand, allows you to update only the fields you specify. Some mandatory fields can be left
 * out, and the resource will only be updated with the provided data, leaving other fields unchanged.
 *
 * The version of the OpenAPI document: 0.1.2 (1)
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.klant.model;

import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;


public class ExpandKlantcontact {

    /**
     * Unieke (technische) identificatiecode van de betrokkene bij klantcontact.
     */
    @JsonbProperty("uuid")
    protected UUID uuid;

    /**
     * De unieke URL van dit klantcontact binnen deze API.
     */
    @JsonbProperty("url")
    protected URI url;

    /**
     * Onderwerpobject dat tijdens een klantcontact aan de orde was.
     */
    @JsonbProperty("gingOverOnderwerpobjecten")
    protected List<OnderwerpobjectForeignKey> gingOverOnderwerpobjecten = new ArrayList<>();

    /**
     * Actor die bij een klantcontact betrokken was.
     */
    @JsonbProperty("hadBetrokkenActoren")
    protected List<Actor> hadBetrokkenActoren = new ArrayList<>();

    /**
     * Bijlage die (een deel van) de inhoud van het klantcontact beschrijft.
     */
    @JsonbProperty("omvatteBijlagen")
    protected List<BijlageForeignKey> omvatteBijlagen = new ArrayList<>();

    /**
     * Persoon of organisatie die betrokken was bij een klantcontact.
     */
    @JsonbProperty("hadBetrokkenen")
    protected List<BetrokkeneForeignKey> hadBetrokkenen = new ArrayList<>();

    /**
     * Klantcontact dat leidde tot een interne taak.
     */
    @JsonbProperty("leiddeTotInterneTaken")
    protected List<InterneTaakForeignKey> leiddeTotInterneTaken = new ArrayList<>();

    /**
     * Uniek identificerend nummer dat tijdens communicatie tussen mensen kan worden gebruikt om het specifieke klantcontact aan te duiden.
     */
    @JsonbProperty("nummer")
    protected String nummer;

    /**
     * Communicatiekanaal dat bij het klantcontact werd gebruikt.
     */
    @JsonbProperty("kanaal")
    protected String kanaal;

    /**
     * Datgene waarover het klantcontact ging.
     */
    @JsonbProperty("onderwerp")
    protected String onderwerp;

    /**
     * Informatie die tijdens het klantcontact werd overgebracht of uitgewisseld, voor zover die voor betrokkenen of actoren relevant is.
     */
    @JsonbProperty("inhoud")
    protected String inhoud;

    /**
     * Geeft, indien bekend, aan of de poging contact tussen de gemeente en inwoner(s) of organisatie(s) tot stand te brengen succesvol was.
     */
    @JsonbProperty("indicatieContactGelukt")
    protected Boolean indicatieContactGelukt;

    /**
     * Taal, in ISO 639-2/B formaat, waarin de partij bij voorkeur contact heeft met de gemeente. Voorbeeld: nld. Zie:
     * https://www.iso.org/standard/4767.html
     */
    @JsonbProperty("taal")
    protected String taal;

    /**
     * Geeft aan of onderwerp, inhoud en kenmerken van het klantcontact vertrouwelijk moeten worden behandeld.
     */
    @JsonbProperty("vertrouwelijk")
    protected Boolean vertrouwelijk;

    /**
     * Datum en tijdstip waarop het klantontact plaatsvond. Als het klantcontact een gesprek betrof, is dit het moment waarop het gesprek
     * begon. Als het klantcontact verzending of ontvangst van informatie betrof, is dit bij benadering het moment waarop informatie door
     * gemeente verzonden of ontvangen werd.
     */
    @JsonbProperty("plaatsgevondenOp")
    protected OffsetDateTime plaatsgevondenOp;

    @JsonbProperty("_expand")
    protected ExpandKlantcontactAllOfExpand expand;

    public ExpandKlantcontact() {
    }

    @JsonbCreator
    public ExpandKlantcontact(
            @JsonbProperty(value = "uuid") UUID uuid,
            @JsonbProperty(value = "url") URI url,
            @JsonbProperty(value = "gingOverOnderwerpobjecten") List<OnderwerpobjectForeignKey> gingOverOnderwerpobjecten,
            @JsonbProperty(value = "hadBetrokkenActoren") List<Actor> hadBetrokkenActoren,
            @JsonbProperty(value = "omvatteBijlagen") List<BijlageForeignKey> omvatteBijlagen,
            @JsonbProperty(value = "hadBetrokkenen") List<BetrokkeneForeignKey> hadBetrokkenen,
            @JsonbProperty(value = "leiddeTotInterneTaken") List<InterneTaakForeignKey> leiddeTotInterneTaken
    ) {
        this.uuid = uuid;
        this.url = url;
        this.gingOverOnderwerpobjecten = gingOverOnderwerpobjecten;
        this.hadBetrokkenActoren = hadBetrokkenActoren;
        this.omvatteBijlagen = omvatteBijlagen;
        this.hadBetrokkenen = hadBetrokkenen;
        this.leiddeTotInterneTaken = leiddeTotInterneTaken;
    }

    /**
     * Unieke (technische) identificatiecode van de betrokkene bij klantcontact.
     * 
     * @return uuid
     **/
    public UUID getUuid() {
        return uuid;
    }


    /**
     * De unieke URL van dit klantcontact binnen deze API.
     * 
     * @return url
     **/
    public URI getUrl() {
        return url;
    }


    /**
     * Onderwerpobject dat tijdens een klantcontact aan de orde was.
     * 
     * @return gingOverOnderwerpobjecten
     **/
    public List<OnderwerpobjectForeignKey> getGingOverOnderwerpobjecten() {
        return gingOverOnderwerpobjecten;
    }


    /**
     * Actor die bij een klantcontact betrokken was.
     * 
     * @return hadBetrokkenActoren
     **/
    public List<Actor> getHadBetrokkenActoren() {
        return hadBetrokkenActoren;
    }


    /**
     * Bijlage die (een deel van) de inhoud van het klantcontact beschrijft.
     * 
     * @return omvatteBijlagen
     **/
    public List<BijlageForeignKey> getOmvatteBijlagen() {
        return omvatteBijlagen;
    }


    /**
     * Persoon of organisatie die betrokken was bij een klantcontact.
     * 
     * @return hadBetrokkenen
     **/
    public List<BetrokkeneForeignKey> getHadBetrokkenen() {
        return hadBetrokkenen;
    }


    /**
     * Klantcontact dat leidde tot een interne taak.
     * 
     * @return leiddeTotInterneTaken
     **/
    public List<InterneTaakForeignKey> getLeiddeTotInterneTaken() {
        return leiddeTotInterneTaken;
    }


    /**
     * Uniek identificerend nummer dat tijdens communicatie tussen mensen kan worden gebruikt om het specifieke klantcontact aan te duiden.
     * 
     * @return nummer
     **/
    public String getNummer() {
        return nummer;
    }

    /**
     * Set nummer
     */
    public void setNummer(String nummer) {
        this.nummer = nummer;
    }

    public ExpandKlantcontact nummer(String nummer) {
        this.nummer = nummer;
        return this;
    }

    /**
     * Communicatiekanaal dat bij het klantcontact werd gebruikt.
     * 
     * @return kanaal
     **/
    public String getKanaal() {
        return kanaal;
    }

    /**
     * Set kanaal
     */
    public void setKanaal(String kanaal) {
        this.kanaal = kanaal;
    }

    public ExpandKlantcontact kanaal(String kanaal) {
        this.kanaal = kanaal;
        return this;
    }

    /**
     * Datgene waarover het klantcontact ging.
     * 
     * @return onderwerp
     **/
    public String getOnderwerp() {
        return onderwerp;
    }

    /**
     * Set onderwerp
     */
    public void setOnderwerp(String onderwerp) {
        this.onderwerp = onderwerp;
    }

    public ExpandKlantcontact onderwerp(String onderwerp) {
        this.onderwerp = onderwerp;
        return this;
    }

    /**
     * Informatie die tijdens het klantcontact werd overgebracht of uitgewisseld, voor zover die voor betrokkenen of actoren relevant is.
     * 
     * @return inhoud
     **/
    public String getInhoud() {
        return inhoud;
    }

    /**
     * Set inhoud
     */
    public void setInhoud(String inhoud) {
        this.inhoud = inhoud;
    }

    public ExpandKlantcontact inhoud(String inhoud) {
        this.inhoud = inhoud;
        return this;
    }

    /**
     * Geeft, indien bekend, aan of de poging contact tussen de gemeente en inwoner(s) of organisatie(s) tot stand te brengen succesvol was.
     * 
     * @return indicatieContactGelukt
     **/
    public Boolean getIndicatieContactGelukt() {
        return indicatieContactGelukt;
    }

    /**
     * Set indicatieContactGelukt
     */
    public void setIndicatieContactGelukt(Boolean indicatieContactGelukt) {
        this.indicatieContactGelukt = indicatieContactGelukt;
    }

    public ExpandKlantcontact indicatieContactGelukt(Boolean indicatieContactGelukt) {
        this.indicatieContactGelukt = indicatieContactGelukt;
        return this;
    }

    /**
     * Taal, in ISO 639-2/B formaat, waarin de partij bij voorkeur contact heeft met de gemeente. Voorbeeld: nld. Zie:
     * https://www.iso.org/standard/4767.html
     * 
     * @return taal
     **/
    public String getTaal() {
        return taal;
    }

    /**
     * Set taal
     */
    public void setTaal(String taal) {
        this.taal = taal;
    }

    public ExpandKlantcontact taal(String taal) {
        this.taal = taal;
        return this;
    }

    /**
     * Geeft aan of onderwerp, inhoud en kenmerken van het klantcontact vertrouwelijk moeten worden behandeld.
     * 
     * @return vertrouwelijk
     **/
    public Boolean getVertrouwelijk() {
        return vertrouwelijk;
    }

    /**
     * Set vertrouwelijk
     */
    public void setVertrouwelijk(Boolean vertrouwelijk) {
        this.vertrouwelijk = vertrouwelijk;
    }

    public ExpandKlantcontact vertrouwelijk(Boolean vertrouwelijk) {
        this.vertrouwelijk = vertrouwelijk;
        return this;
    }

    /**
     * Datum en tijdstip waarop het klantontact plaatsvond. Als het klantcontact een gesprek betrof, is dit het moment waarop het gesprek
     * begon. Als het klantcontact verzending of ontvangst van informatie betrof, is dit bij benadering het moment waarop informatie door
     * gemeente verzonden of ontvangen werd.
     * 
     * @return plaatsgevondenOp
     **/
    public OffsetDateTime getPlaatsgevondenOp() {
        return plaatsgevondenOp;
    }

    /**
     * Set plaatsgevondenOp
     */
    public void setPlaatsgevondenOp(OffsetDateTime plaatsgevondenOp) {
        this.plaatsgevondenOp = plaatsgevondenOp;
    }

    public ExpandKlantcontact plaatsgevondenOp(OffsetDateTime plaatsgevondenOp) {
        this.plaatsgevondenOp = plaatsgevondenOp;
        return this;
    }

    /**
     * Get expand
     * 
     * @return expand
     **/
    public ExpandKlantcontactAllOfExpand getExpand() {
        return expand;
    }

    /**
     * Set expand
     */
    public void setExpand(ExpandKlantcontactAllOfExpand expand) {
        this.expand = expand;
    }

    public ExpandKlantcontact expand(ExpandKlantcontactAllOfExpand expand) {
        this.expand = expand;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExpandKlantcontact expandKlantcontact = (ExpandKlantcontact) o;
        return Objects.equals(this.uuid, expandKlantcontact.uuid) &&
               Objects.equals(this.url, expandKlantcontact.url) &&
               Objects.equals(this.gingOverOnderwerpobjecten, expandKlantcontact.gingOverOnderwerpobjecten) &&
               Objects.equals(this.hadBetrokkenActoren, expandKlantcontact.hadBetrokkenActoren) &&
               Objects.equals(this.omvatteBijlagen, expandKlantcontact.omvatteBijlagen) &&
               Objects.equals(this.hadBetrokkenen, expandKlantcontact.hadBetrokkenen) &&
               Objects.equals(this.leiddeTotInterneTaken, expandKlantcontact.leiddeTotInterneTaken) &&
               Objects.equals(this.nummer, expandKlantcontact.nummer) &&
               Objects.equals(this.kanaal, expandKlantcontact.kanaal) &&
               Objects.equals(this.onderwerp, expandKlantcontact.onderwerp) &&
               Objects.equals(this.inhoud, expandKlantcontact.inhoud) &&
               Objects.equals(this.indicatieContactGelukt, expandKlantcontact.indicatieContactGelukt) &&
               Objects.equals(this.taal, expandKlantcontact.taal) &&
               Objects.equals(this.vertrouwelijk, expandKlantcontact.vertrouwelijk) &&
               Objects.equals(this.plaatsgevondenOp, expandKlantcontact.plaatsgevondenOp) &&
               Objects.equals(this.expand, expandKlantcontact.expand);
    }

    @Override
    public int hashCode() {
        return Objects.hash(uuid, url, gingOverOnderwerpobjecten, hadBetrokkenActoren, omvatteBijlagen, hadBetrokkenen,
                leiddeTotInterneTaken, nummer, kanaal, onderwerp, inhoud, indicatieContactGelukt, taal, vertrouwelijk, plaatsgevondenOp,
                expand);
    }

    /**
     * Create a string representation of this pojo.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExpandKlantcontact {\n");

        sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    gingOverOnderwerpobjecten: ").append(toIndentedString(gingOverOnderwerpobjecten)).append("\n");
        sb.append("    hadBetrokkenActoren: ").append(toIndentedString(hadBetrokkenActoren)).append("\n");
        sb.append("    omvatteBijlagen: ").append(toIndentedString(omvatteBijlagen)).append("\n");
        sb.append("    hadBetrokkenen: ").append(toIndentedString(hadBetrokkenen)).append("\n");
        sb.append("    leiddeTotInterneTaken: ").append(toIndentedString(leiddeTotInterneTaken)).append("\n");
        sb.append("    nummer: ").append(toIndentedString(nummer)).append("\n");
        sb.append("    kanaal: ").append(toIndentedString(kanaal)).append("\n");
        sb.append("    onderwerp: ").append(toIndentedString(onderwerp)).append("\n");
        sb.append("    inhoud: ").append(toIndentedString(inhoud)).append("\n");
        sb.append("    indicatieContactGelukt: ").append(toIndentedString(indicatieContactGelukt)).append("\n");
        sb.append("    taal: ").append(toIndentedString(taal)).append("\n");
        sb.append("    vertrouwelijk: ").append(toIndentedString(vertrouwelijk)).append("\n");
        sb.append("    plaatsgevondenOp: ").append(toIndentedString(plaatsgevondenOp)).append("\n");
        sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
