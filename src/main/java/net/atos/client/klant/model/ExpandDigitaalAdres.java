/*
 * SPDX-FileCopyrightText: 2024 INFO.nl
 * SPDX-License-Identifier: EUPL-1.2+
 */

/**
 * klantinteracties
 * **Warning: Difference between `PUT` and `PATCH`** Both `PUT` and `PATCH` methods can be used to update the fields in a resource, but
 * there is a key difference in how they handle required fields: * The `PUT` method requires you to specify **all mandatory fields** when
 * updating a resource. If any mandatory field is missing, the update will fail. Optional fields are left unchanged if they are not
 * specified. * The `PATCH` method, on the other hand, allows you to update only the fields you specify. Some mandatory fields can be left
 * out, and the resource will only be updated with the provided data, leaving other fields unchanged.
 *
 * The version of the OpenAPI document: 0.1.2 (1)
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.klant.model;

import java.net.URI;
import java.util.Objects;
import java.util.UUID;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;


public class ExpandDigitaalAdres {

    /**
     * Unieke (technische) identificatiecode van het digitaal adres.
     */
    @JsonbProperty("uuid")
    protected UUID uuid;

    /**
     * De unieke URL van dit digitaal adres binnen deze API.
     */
    @JsonbProperty("url")
    protected URI url;

    /**
     * Digitaal adres dat een betrokkene bij klantcontact verstrekte voor gebruik bij opvolging van een klantcontact.
     */
    @JsonbProperty("verstrektDoorBetrokkene")
    protected BetrokkeneForeignKey verstrektDoorBetrokkene;

    /**
     * Digitaal adres dat een partij verstrekte voor gebruik bij toekomstig contact met de gemeente.
     */
    @JsonbProperty("verstrektDoorPartij")
    protected PartijForeignKey verstrektDoorPartij;

    /**
     * Validatie van dit veld is afhankelijk van het opgegeven `soortDigitaalAdres`. De validatie die toegepast wordt voor e-mailadressen is
     * te lezen via de volgende URL: https://github.com/django/django/blob/4.2/django/core/validators.py#L174.Voor telefoonnummers wordt de
     * volgende regex expressie toegepast ter validatie: `(0[8-9]00[0-9]{4,7})|(0[1-9][0-9]{8})|(\\+[0-9]{9,20}|1400|140[0-9]{2,3})`.
     */
    @JsonbProperty("adres")
    protected String adres;

    /**
     * Typering van het digitale adres die aangeeft via welk(e) kanaal of kanalen met dit adres contact kan worden opgenomen.
     */
    @JsonbProperty("soortDigitaalAdres")
    protected SoortDigitaalAdresEnum soortDigitaalAdres;

    /**
     * Geeft aan of dit digitaal adres het standaard adres is voor het `soortDigitaalAdres`
     */
    @JsonbProperty("isStandaardAdres")
    protected Boolean isStandaardAdres;

    /**
     * Omschrijving van het digitaal adres.
     */
    @JsonbProperty("omschrijving")
    protected String omschrijving;

    @JsonbProperty("_expand")
    protected ExpandDigitaalAdresAllOfExpand expand;

    public ExpandDigitaalAdres() {
    }

    @JsonbCreator
    public ExpandDigitaalAdres(
            @JsonbProperty(value = "uuid") UUID uuid,
            @JsonbProperty(value = "url") URI url
    ) {
        this.uuid = uuid;
        this.url = url;
    }

    /**
     * Unieke (technische) identificatiecode van het digitaal adres.
     * 
     * @return uuid
     **/
    public UUID getUuid() {
        return uuid;
    }


    /**
     * De unieke URL van dit digitaal adres binnen deze API.
     * 
     * @return url
     **/
    public URI getUrl() {
        return url;
    }


    /**
     * Digitaal adres dat een betrokkene bij klantcontact verstrekte voor gebruik bij opvolging van een klantcontact.
     * 
     * @return verstrektDoorBetrokkene
     **/
    public BetrokkeneForeignKey getVerstrektDoorBetrokkene() {
        return verstrektDoorBetrokkene;
    }

    /**
     * Set verstrektDoorBetrokkene
     */
    public void setVerstrektDoorBetrokkene(BetrokkeneForeignKey verstrektDoorBetrokkene) {
        this.verstrektDoorBetrokkene = verstrektDoorBetrokkene;
    }

    public ExpandDigitaalAdres verstrektDoorBetrokkene(BetrokkeneForeignKey verstrektDoorBetrokkene) {
        this.verstrektDoorBetrokkene = verstrektDoorBetrokkene;
        return this;
    }

    /**
     * Digitaal adres dat een partij verstrekte voor gebruik bij toekomstig contact met de gemeente.
     * 
     * @return verstrektDoorPartij
     **/
    public PartijForeignKey getVerstrektDoorPartij() {
        return verstrektDoorPartij;
    }

    /**
     * Set verstrektDoorPartij
     */
    public void setVerstrektDoorPartij(PartijForeignKey verstrektDoorPartij) {
        this.verstrektDoorPartij = verstrektDoorPartij;
    }

    public ExpandDigitaalAdres verstrektDoorPartij(PartijForeignKey verstrektDoorPartij) {
        this.verstrektDoorPartij = verstrektDoorPartij;
        return this;
    }

    /**
     * Validatie van dit veld is afhankelijk van het opgegeven &#x60;soortDigitaalAdres&#x60;. De validatie die toegepast wordt voor
     * e-mailadressen is te lezen via de volgende URL: https://github.com/django/django/blob/4.2/django/core/validators.py#L174.Voor
     * telefoonnummers wordt de volgende regex expressie toegepast ter validatie:
     * &#x60;(0[8-9]00[0-9]{4,7})|(0[1-9][0-9]{8})|(\\+[0-9]{9,20}|1400|140[0-9]{2,3})&#x60;.
     * 
     * @return adres
     **/
    public String getAdres() {
        return adres;
    }

    /**
     * Set adres
     */
    public void setAdres(String adres) {
        this.adres = adres;
    }

    public ExpandDigitaalAdres adres(String adres) {
        this.adres = adres;
        return this;
    }

    /**
     * Typering van het digitale adres die aangeeft via welk(e) kanaal of kanalen met dit adres contact kan worden opgenomen.
     * 
     * @return soortDigitaalAdres
     **/
    public SoortDigitaalAdresEnum getSoortDigitaalAdres() {
        return soortDigitaalAdres;
    }

    /**
     * Set soortDigitaalAdres
     */
    public void setSoortDigitaalAdres(SoortDigitaalAdresEnum soortDigitaalAdres) {
        this.soortDigitaalAdres = soortDigitaalAdres;
    }

    public ExpandDigitaalAdres soortDigitaalAdres(SoortDigitaalAdresEnum soortDigitaalAdres) {
        this.soortDigitaalAdres = soortDigitaalAdres;
        return this;
    }

    /**
     * Geeft aan of dit digitaal adres het standaard adres is voor het &#x60;soortDigitaalAdres&#x60;
     * 
     * @return isStandaardAdres
     **/
    public Boolean getIsStandaardAdres() {
        return isStandaardAdres;
    }

    /**
     * Set isStandaardAdres
     */
    public void setIsStandaardAdres(Boolean isStandaardAdres) {
        this.isStandaardAdres = isStandaardAdres;
    }

    public ExpandDigitaalAdres isStandaardAdres(Boolean isStandaardAdres) {
        this.isStandaardAdres = isStandaardAdres;
        return this;
    }

    /**
     * Omschrijving van het digitaal adres.
     * 
     * @return omschrijving
     **/
    public String getOmschrijving() {
        return omschrijving;
    }

    /**
     * Set omschrijving
     */
    public void setOmschrijving(String omschrijving) {
        this.omschrijving = omschrijving;
    }

    public ExpandDigitaalAdres omschrijving(String omschrijving) {
        this.omschrijving = omschrijving;
        return this;
    }

    /**
     * Get expand
     * 
     * @return expand
     **/
    public ExpandDigitaalAdresAllOfExpand getExpand() {
        return expand;
    }

    /**
     * Set expand
     */
    public void setExpand(ExpandDigitaalAdresAllOfExpand expand) {
        this.expand = expand;
    }

    public ExpandDigitaalAdres expand(ExpandDigitaalAdresAllOfExpand expand) {
        this.expand = expand;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExpandDigitaalAdres expandDigitaalAdres = (ExpandDigitaalAdres) o;
        return Objects.equals(this.uuid, expandDigitaalAdres.uuid) &&
               Objects.equals(this.url, expandDigitaalAdres.url) &&
               Objects.equals(this.verstrektDoorBetrokkene, expandDigitaalAdres.verstrektDoorBetrokkene) &&
               Objects.equals(this.verstrektDoorPartij, expandDigitaalAdres.verstrektDoorPartij) &&
               Objects.equals(this.adres, expandDigitaalAdres.adres) &&
               Objects.equals(this.soortDigitaalAdres, expandDigitaalAdres.soortDigitaalAdres) &&
               Objects.equals(this.isStandaardAdres, expandDigitaalAdres.isStandaardAdres) &&
               Objects.equals(this.omschrijving, expandDigitaalAdres.omschrijving) &&
               Objects.equals(this.expand, expandDigitaalAdres.expand);
    }

    @Override
    public int hashCode() {
        return Objects.hash(uuid, url, verstrektDoorBetrokkene, verstrektDoorPartij, adres, soortDigitaalAdres, isStandaardAdres,
                omschrijving, expand);
    }

    /**
     * Create a string representation of this pojo.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExpandDigitaalAdres {\n");

        sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    verstrektDoorBetrokkene: ").append(toIndentedString(verstrektDoorBetrokkene)).append("\n");
        sb.append("    verstrektDoorPartij: ").append(toIndentedString(verstrektDoorPartij)).append("\n");
        sb.append("    adres: ").append(toIndentedString(adres)).append("\n");
        sb.append("    soortDigitaalAdres: ").append(toIndentedString(soortDigitaalAdres)).append("\n");
        sb.append("    isStandaardAdres: ").append(toIndentedString(isStandaardAdres)).append("\n");
        sb.append("    omschrijving: ").append(toIndentedString(omschrijving)).append("\n");
        sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
