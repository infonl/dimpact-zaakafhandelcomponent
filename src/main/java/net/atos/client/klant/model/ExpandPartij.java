/*
 * SPDX-FileCopyrightText: 2024 Lifely
 * SPDX-License-Identifier: EUPL-1.2+
 */

/**
 * klantinteracties
 * **Warning: Difference between `PUT` and `PATCH`** Both `PUT` and `PATCH` methods can be used to update the fields in a resource, but
 * there is a key difference in how they handle required fields: * The `PUT` method requires you to specify **all mandatory fields** when
 * updating a resource. If any mandatory field is missing, the update will fail. Optional fields are left unchanged if they are not
 * specified. * The `PATCH` method, on the other hand, allows you to update only the fields you specify. Some mandatory fields can be left
 * out, and the resource will only be updated with the provided data, leaving other fields unchanged.
 *
 * The version of the OpenAPI document: 0.1.2 (1)
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.klant.model;

import java.net.URI;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;


public class ExpandPartij extends Partij {

    @JsonbProperty("_expand")
    protected ExpandPartijAllOfExpand expand;

    public ExpandPartij() {
    }

    @JsonbCreator
    public ExpandPartij(
            @JsonbProperty(value = "uuid") UUID uuid,
            @JsonbProperty(value = "url") URI url,
            @JsonbProperty(value = "betrokkenen") List<BetrokkeneForeignKey> betrokkenen,
            @JsonbProperty(value = "categorieRelaties") List<CategorieRelatieForeignKey> categorieRelaties,
            @JsonbProperty(value = "vertegenwoordigden") List<PartijForeignKey> vertegenwoordigden
    ) {
        this.uuid = uuid;
        this.url = url;
        this.betrokkenen = betrokkenen;
        this.categorieRelaties = categorieRelaties;
        this.vertegenwoordigden = vertegenwoordigden;
    }

    /**
     * Get expand
     * 
     * @return expand
     **/
    public ExpandPartijAllOfExpand getExpand() {
        return expand;
    }

    /**
     * Set expand
     */
    public void setExpand(ExpandPartijAllOfExpand expand) {
        this.expand = expand;
    }

    public ExpandPartij expand(ExpandPartijAllOfExpand expand) {
        this.expand = expand;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExpandPartij expandPartij = (ExpandPartij) o;
        return Objects.equals(this.expand, expandPartij.expand) &&
               super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(expand, super.hashCode());
    }

    /**
     * Create a string representation of this pojo.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExpandPartij {\n");
        sb.append("    ").append(toIndentedString(super.toString())).append("\n");
        sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
