/*
 * SPDX-FileCopyrightText: 2024 INFO.nl
 * SPDX-License-Identifier: EUPL-1.2+
 */

/**
 * klantinteracties
 * **Warning: Difference between `PUT` and `PATCH`** Both `PUT` and `PATCH` methods can be used to update the fields in a resource, but
 * there is a key difference in how they handle required fields: * The `PUT` method requires you to specify **all mandatory fields** when
 * updating a resource. If any mandatory field is missing, the update will fail. Optional fields are left unchanged if they are not
 * specified. * The `PATCH` method, on the other hand, allows you to update only the fields you specify. Some mandatory fields can be left
 * out, and the resource will only be updated with the provided data, leaving other fields unchanged.
 *
 * The version of the OpenAPI document: 0.1.2 (1)
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.klant.model;

import java.net.URI;
import java.util.Objects;
import java.util.UUID;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;


/**
 * Set gegevensgroepdata from validated nested data. Usage: include the mixin on the ModelSerializer that has gegevensgroepen.
 */

public class PartijIdentificator {

    /**
     * Unieke (technische) identificatiecode van de partij-identificator.
     */
    @JsonbProperty("uuid")
    protected UUID uuid;

    /**
     * De unieke URL van deze partij indentificator binnen deze API.
     */
    @JsonbProperty("url")
    protected URI url;

    /**
     * Partij-identificator die hoorde bij een partij.
     */
    @JsonbProperty("identificeerdePartij")
    protected PartijForeignKey identificeerdePartij;

    /**
     * Vrij tekstveld om de verwijzing naar een niet-voorgedefinieerd objecttype, soort objectID of Register vast te leggen.
     */
    @JsonbProperty("anderePartijIdentificator")
    protected String anderePartijIdentificator;

    /**
     * Gegevens die een partij in een basisregistratie of ander extern register uniek identificeren.
     */
    @JsonbProperty("partijIdentificator")
    protected PartijIdentificatorGroepType partijIdentificator;

    /**
     * The parent PartijIdentificator under which this PartijIdentificator is unique (e.g. the parent identificator could specify a KVK
     * number and the child identificator could specify a vestigingsnummer that is unique for the KVK number).
     */
    @JsonbProperty("subIdentificatorVan")
    protected PartijIdentificatorForeignkey subIdentificatorVan;

    public PartijIdentificator() {
    }

    @JsonbCreator
    public PartijIdentificator(
            @JsonbProperty(value = "url") URI url
    ) {
        this.url = url;
    }

    /**
     * Unieke (technische) identificatiecode van de partij-identificator.
     * 
     * @return uuid
     **/
    public UUID getUuid() {
        return uuid;
    }

    /**
     * Set uuid
     */
    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    public PartijIdentificator uuid(UUID uuid) {
        this.uuid = uuid;
        return this;
    }

    /**
     * De unieke URL van deze partij indentificator binnen deze API.
     * 
     * @return url
     **/
    public URI getUrl() {
        return url;
    }


    /**
     * Partij-identificator die hoorde bij een partij.
     * 
     * @return identificeerdePartij
     **/
    public PartijForeignKey getIdentificeerdePartij() {
        return identificeerdePartij;
    }

    /**
     * Set identificeerdePartij
     */
    public void setIdentificeerdePartij(PartijForeignKey identificeerdePartij) {
        this.identificeerdePartij = identificeerdePartij;
    }

    public PartijIdentificator identificeerdePartij(PartijForeignKey identificeerdePartij) {
        this.identificeerdePartij = identificeerdePartij;
        return this;
    }

    /**
     * Vrij tekstveld om de verwijzing naar een niet-voorgedefinieerd objecttype, soort objectID of Register vast te leggen.
     * 
     * @return anderePartijIdentificator
     **/
    public String getAnderePartijIdentificator() {
        return anderePartijIdentificator;
    }

    /**
     * Set anderePartijIdentificator
     */
    public void setAnderePartijIdentificator(String anderePartijIdentificator) {
        this.anderePartijIdentificator = anderePartijIdentificator;
    }

    public PartijIdentificator anderePartijIdentificator(String anderePartijIdentificator) {
        this.anderePartijIdentificator = anderePartijIdentificator;
        return this;
    }

    /**
     * Gegevens die een partij in een basisregistratie of ander extern register uniek identificeren.
     * 
     * @return partijIdentificator
     **/
    public PartijIdentificatorGroepType getPartijIdentificator() {
        return partijIdentificator;
    }

    /**
     * Set partijIdentificator
     */
    public void setPartijIdentificator(PartijIdentificatorGroepType partijIdentificator) {
        this.partijIdentificator = partijIdentificator;
    }

    public PartijIdentificator partijIdentificator(PartijIdentificatorGroepType partijIdentificator) {
        this.partijIdentificator = partijIdentificator;
        return this;
    }

    /**
     * The parent PartijIdentificator under which this PartijIdentificator is unique (e.g. the parent identificator could specify a KVK
     * number and the child identificator could specify a vestigingsnummer that is unique for the KVK number).
     * 
     * @return subIdentificatorVan
     **/
    public PartijIdentificatorForeignkey getSubIdentificatorVan() {
        return subIdentificatorVan;
    }

    /**
     * Set subIdentificatorVan
     */
    public void setSubIdentificatorVan(PartijIdentificatorForeignkey subIdentificatorVan) {
        this.subIdentificatorVan = subIdentificatorVan;
    }

    public PartijIdentificator subIdentificatorVan(PartijIdentificatorForeignkey subIdentificatorVan) {
        this.subIdentificatorVan = subIdentificatorVan;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PartijIdentificator partijIdentificator = (PartijIdentificator) o;
        return Objects.equals(this.uuid, partijIdentificator.uuid) &&
               Objects.equals(this.url, partijIdentificator.url) &&
               Objects.equals(this.identificeerdePartij, partijIdentificator.identificeerdePartij) &&
               Objects.equals(this.anderePartijIdentificator, partijIdentificator.anderePartijIdentificator) &&
               Objects.equals(this.partijIdentificator, partijIdentificator.partijIdentificator) &&
               Objects.equals(this.subIdentificatorVan, partijIdentificator.subIdentificatorVan);
    }

    @Override
    public int hashCode() {
        return Objects.hash(uuid, url, identificeerdePartij, anderePartijIdentificator, partijIdentificator, subIdentificatorVan);
    }

    /**
     * Create a string representation of this pojo.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PartijIdentificator {\n");

        sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    identificeerdePartij: ").append(toIndentedString(identificeerdePartij)).append("\n");
        sb.append("    anderePartijIdentificator: ").append(toIndentedString(anderePartijIdentificator)).append("\n");
        sb.append("    partijIdentificator: ").append(toIndentedString(partijIdentificator)).append("\n");
        sb.append("    subIdentificatorVan: ").append(toIndentedString(subIdentificatorVan)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
