/**
 * klantinteracties
 * Description WIP.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.klant.model;

import java.net.URI;
import java.util.UUID;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;


public class DigitaalAdres {

    /**
     * Unieke (technische) identificatiecode van het digitaal adres.
     */
    @JsonbProperty("uuid")
    private UUID uuid;

    /**
     * De unieke URL van dit digitaal adres binnen deze API.
     */
    @JsonbProperty("url")
    private URI url;

    /**
     * Digitaal adres dat een betrokkene bij klantcontact verstrekte voor gebruik bij opvolging van een klantcontact.
     */
    @JsonbProperty("verstrektDoorBetrokkene")
    private BetrokkeneForeignKey verstrektDoorBetrokkene;

    /**
     * Digitaal adres dat een partij verstrekte voor gebruik bij toekomstig contact met de gemeente.
     */
    @JsonbProperty("verstrektDoorPartij")
    private PartijForeignKey verstrektDoorPartij;

    /**
     * Digitaal adres waarmee een persoon of organisatie bereikt kan worden.
     */
    @JsonbProperty("adres")
    private String adres;

    /**
     * Typering van het digitale adres die aangeeft via welk(e) kanaal of kanalen met dit adres contact kan worden opgenomen.
     */
    @JsonbProperty("soortDigitaalAdres")
    private String soortDigitaalAdres;

    /**
     * Omschrijving van het digitaal adres.
     */
    @JsonbProperty("omschrijving")
    private String omschrijving;

    public DigitaalAdres() {
    }

    @JsonbCreator
    public DigitaalAdres(
            @JsonbProperty(value = "uuid") UUID uuid,
            @JsonbProperty(value = "url") URI url
    ) {
        this.uuid = uuid;
        this.url = url;
    }

    /**
     * Unieke (technische) identificatiecode van het digitaal adres.
     * 
     * @return uuid
     **/
    public UUID getUuid() {
        return uuid;
    }


    /**
     * De unieke URL van dit digitaal adres binnen deze API.
     * 
     * @return url
     **/
    public URI getUrl() {
        return url;
    }


    /**
     * Digitaal adres dat een betrokkene bij klantcontact verstrekte voor gebruik bij opvolging van een klantcontact.
     * 
     * @return verstrektDoorBetrokkene
     **/
    public BetrokkeneForeignKey getVerstrektDoorBetrokkene() {
        return verstrektDoorBetrokkene;
    }

    /**
     * Set verstrektDoorBetrokkene
     */
    public void setVerstrektDoorBetrokkene(BetrokkeneForeignKey verstrektDoorBetrokkene) {
        this.verstrektDoorBetrokkene = verstrektDoorBetrokkene;
    }

    public DigitaalAdres verstrektDoorBetrokkene(BetrokkeneForeignKey verstrektDoorBetrokkene) {
        this.verstrektDoorBetrokkene = verstrektDoorBetrokkene;
        return this;
    }

    /**
     * Digitaal adres dat een partij verstrekte voor gebruik bij toekomstig contact met de gemeente.
     * 
     * @return verstrektDoorPartij
     **/
    public PartijForeignKey getVerstrektDoorPartij() {
        return verstrektDoorPartij;
    }

    /**
     * Set verstrektDoorPartij
     */
    public void setVerstrektDoorPartij(PartijForeignKey verstrektDoorPartij) {
        this.verstrektDoorPartij = verstrektDoorPartij;
    }

    public DigitaalAdres verstrektDoorPartij(PartijForeignKey verstrektDoorPartij) {
        this.verstrektDoorPartij = verstrektDoorPartij;
        return this;
    }

    /**
     * Digitaal adres waarmee een persoon of organisatie bereikt kan worden.
     * 
     * @return adres
     **/
    public String getAdres() {
        return adres;
    }

    /**
     * Set adres
     */
    public void setAdres(String adres) {
        this.adres = adres;
    }

    public DigitaalAdres adres(String adres) {
        this.adres = adres;
        return this;
    }

    /**
     * Typering van het digitale adres die aangeeft via welk(e) kanaal of kanalen met dit adres contact kan worden opgenomen.
     * 
     * @return soortDigitaalAdres
     **/
    public String getSoortDigitaalAdres() {
        return soortDigitaalAdres;
    }

    /**
     * Set soortDigitaalAdres
     */
    public void setSoortDigitaalAdres(String soortDigitaalAdres) {
        this.soortDigitaalAdres = soortDigitaalAdres;
    }

    public DigitaalAdres soortDigitaalAdres(String soortDigitaalAdres) {
        this.soortDigitaalAdres = soortDigitaalAdres;
        return this;
    }

    /**
     * Omschrijving van het digitaal adres.
     * 
     * @return omschrijving
     **/
    public String getOmschrijving() {
        return omschrijving;
    }

    /**
     * Set omschrijving
     */
    public void setOmschrijving(String omschrijving) {
        this.omschrijving = omschrijving;
    }

    public DigitaalAdres omschrijving(String omschrijving) {
        this.omschrijving = omschrijving;
        return this;
    }


    /**
     * Create a string representation of this pojo.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DigitaalAdres {\n");

        sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    verstrektDoorBetrokkene: ").append(toIndentedString(verstrektDoorBetrokkene)).append("\n");
        sb.append("    verstrektDoorPartij: ").append(toIndentedString(verstrektDoorPartij)).append("\n");
        sb.append("    adres: ").append(toIndentedString(adres)).append("\n");
        sb.append("    soortDigitaalAdres: ").append(toIndentedString(soortDigitaalAdres)).append("\n");
        sb.append("    omschrijving: ").append(toIndentedString(omschrijving)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
