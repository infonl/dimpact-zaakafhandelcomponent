/*
 * SPDX-FileCopyrightText: 2025 Lifely
 * SPDX-License-Identifier: EUPL-1.2+
 */

/**
 * klantinteracties
 * **Warning: Difference between `PUT` and `PATCH`** Both `PUT` and `PATCH` methods can be used to update the fields in a resource, but
 * there is a key difference in how they handle required fields: * The `PUT` method requires you to specify **all mandatory fields** when
 * updating a resource. If any mandatory field is missing, the update will fail. Optional fields are left unchanged if they are not
 * specified. * The `PATCH` method, on the other hand, allows you to update only the fields you specify. Some mandatory fields can be left
 * out, and the resource will only be updated with the provided data, leaving other fields unchanged.
 *
 * The version of the OpenAPI document: 0.1.2 (1)
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.klant.model;

import java.net.URI;
import java.util.Objects;
import java.util.UUID;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;


public class PatchedActor {

    /**
     * Unieke (technische) identificatiecode van de actor.
     */
    @JsonbProperty("uuid")
    protected UUID uuid;

    /**
     * De unieke URL van deze actor binnen deze API.
     */
    @JsonbProperty("url")
    protected URI url;

    /**
     * Naam van de actor.
     */
    @JsonbProperty("naam")
    protected String naam;

    /**
     * Geeft aan van welke specifieke soort actor sprake is.
     */
    @JsonbProperty("soortActor")
    protected SoortActorEnum soortActor;

    /**
     * Geeft aan of aan de actor nog betrokken mag worden bij nieuwe klantcontacten. Voor niet-actieve is dit niet toegestaan.
     */
    @JsonbProperty("indicatieActief")
    protected Boolean indicatieActief;

    /**
     * Gegevens die een actorwerpobject in een extern register uniek identificeren.
     */
    @JsonbProperty("actoridentificator")
    protected Actoridentificator actoridentificator;

    @JsonbProperty("actorIdentificatie")
    protected OrganisatorischeEenheid actorIdentificatie;

    public PatchedActor() {
    }

    @JsonbCreator
    public PatchedActor(
            @JsonbProperty(value = "uuid") UUID uuid,
            @JsonbProperty(value = "url") URI url
    ) {
        this.uuid = uuid;
        this.url = url;
    }

    /**
     * Unieke (technische) identificatiecode van de actor.
     * 
     * @return uuid
     **/
    public UUID getUuid() {
        return uuid;
    }


    /**
     * De unieke URL van deze actor binnen deze API.
     * 
     * @return url
     **/
    public URI getUrl() {
        return url;
    }


    /**
     * Naam van de actor.
     * 
     * @return naam
     **/
    public String getNaam() {
        return naam;
    }

    /**
     * Set naam
     */
    public void setNaam(String naam) {
        this.naam = naam;
    }

    public PatchedActor naam(String naam) {
        this.naam = naam;
        return this;
    }

    /**
     * Geeft aan van welke specifieke soort actor sprake is.
     * 
     * @return soortActor
     **/
    public SoortActorEnum getSoortActor() {
        return soortActor;
    }

    /**
     * Set soortActor
     */
    public void setSoortActor(SoortActorEnum soortActor) {
        this.soortActor = soortActor;
    }

    public PatchedActor soortActor(SoortActorEnum soortActor) {
        this.soortActor = soortActor;
        return this;
    }

    /**
     * Geeft aan of aan de actor nog betrokken mag worden bij nieuwe klantcontacten. Voor niet-actieve is dit niet toegestaan.
     * 
     * @return indicatieActief
     **/
    public Boolean getIndicatieActief() {
        return indicatieActief;
    }

    /**
     * Set indicatieActief
     */
    public void setIndicatieActief(Boolean indicatieActief) {
        this.indicatieActief = indicatieActief;
    }

    public PatchedActor indicatieActief(Boolean indicatieActief) {
        this.indicatieActief = indicatieActief;
        return this;
    }

    /**
     * Gegevens die een actorwerpobject in een extern register uniek identificeren.
     * 
     * @return actoridentificator
     **/
    public Actoridentificator getActoridentificator() {
        return actoridentificator;
    }

    /**
     * Set actoridentificator
     */
    public void setActoridentificator(Actoridentificator actoridentificator) {
        this.actoridentificator = actoridentificator;
    }

    public PatchedActor actoridentificator(Actoridentificator actoridentificator) {
        this.actoridentificator = actoridentificator;
        return this;
    }

    /**
     * Get actorIdentificatie
     * 
     * @return actorIdentificatie
     **/
    public OrganisatorischeEenheid getActorIdentificatie() {
        return actorIdentificatie;
    }

    /**
     * Set actorIdentificatie
     */
    public void setActorIdentificatie(OrganisatorischeEenheid actorIdentificatie) {
        this.actorIdentificatie = actorIdentificatie;
    }

    public PatchedActor actorIdentificatie(OrganisatorischeEenheid actorIdentificatie) {
        this.actorIdentificatie = actorIdentificatie;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PatchedActor patchedActor = (PatchedActor) o;
        return Objects.equals(this.uuid, patchedActor.uuid) &&
               Objects.equals(this.url, patchedActor.url) &&
               Objects.equals(this.naam, patchedActor.naam) &&
               Objects.equals(this.soortActor, patchedActor.soortActor) &&
               Objects.equals(this.indicatieActief, patchedActor.indicatieActief) &&
               Objects.equals(this.actoridentificator, patchedActor.actoridentificator) &&
               Objects.equals(this.actorIdentificatie, patchedActor.actorIdentificatie);
    }

    @Override
    public int hashCode() {
        return Objects.hash(uuid, url, naam, soortActor, indicatieActief, actoridentificator, actorIdentificatie);
    }

    /**
     * Create a string representation of this pojo.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PatchedActor {\n");

        sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    naam: ").append(toIndentedString(naam)).append("\n");
        sb.append("    soortActor: ").append(toIndentedString(soortActor)).append("\n");
        sb.append("    indicatieActief: ").append(toIndentedString(indicatieActief)).append("\n");
        sb.append("    actoridentificator: ").append(toIndentedString(actoridentificator)).append("\n");
        sb.append("    actorIdentificatie: ").append(toIndentedString(actorIdentificatie)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
