/*
 * SPDX-FileCopyrightText: 2025 Lifely
 * SPDX-License-Identifier: EUPL-1.2+
 */

/**
 * klantinteracties
 * **Warning: Difference between `PUT` and `PATCH`** Both `PUT` and `PATCH` methods can be used to update the fields in a resource, but
 * there is a key difference in how they handle required fields: * The `PUT` method requires you to specify **all mandatory fields** when
 * updating a resource. If any mandatory field is missing, the update will fail. Optional fields are left unchanged if they are not
 * specified. * The `PATCH` method, on the other hand, allows you to update only the fields you specify. Some mandatory fields can be left
 * out, and the resource will only be updated with the provided data, leaving other fields unchanged.
 *
 * The version of the OpenAPI document: 0.1.2 (1)
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.atos.client.klant.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;


/**
 * Display details of the linked resources requested in the `expand` parameter
 */

public class ExpandPartijAllOfExpand {

    /**
     * Digitaal adresen dat een partij verstrekte voor gebruik bij toekomstig contact met de gemeente.
     */
    @JsonbProperty("digitaleAdressen")
    protected List<DigitaalAdres> digitaleAdressen = null;

    /**
     * Betrokkene bij klantcontact die een partij was.
     */
    @JsonbProperty("betrokkenen")
    protected List<ExpandBetrokkene> betrokkenen = null;

    /**
     * De Categorie relaties van een partij: Let op: Dit attribuut is EXPERIMENTEEL.
     */
    @JsonbProperty("categorie_relaties")
    protected List<CategorieRelatie> categorieRelaties = null;

    public ExpandPartijAllOfExpand() {
    }

    @JsonbCreator
    public ExpandPartijAllOfExpand(
            @JsonbProperty(value = "betrokkenen", nillable = true) List<ExpandBetrokkene> betrokkenen,
            @JsonbProperty(value = "categorie_relaties", nillable = true) List<CategorieRelatie> categorieRelaties
    ) {
        this.betrokkenen = betrokkenen;
        this.categorieRelaties = categorieRelaties;
    }

    /**
     * Digitaal adresen dat een partij verstrekte voor gebruik bij toekomstig contact met de gemeente.
     * 
     * @return digitaleAdressen
     **/
    public List<DigitaalAdres> getDigitaleAdressen() {
        return digitaleAdressen;
    }

    /**
     * Set digitaleAdressen
     */
    public void setDigitaleAdressen(List<DigitaalAdres> digitaleAdressen) {
        this.digitaleAdressen = digitaleAdressen;
    }

    public ExpandPartijAllOfExpand digitaleAdressen(List<DigitaalAdres> digitaleAdressen) {
        this.digitaleAdressen = digitaleAdressen;
        return this;
    }

    public ExpandPartijAllOfExpand addDigitaleAdressenItem(DigitaalAdres digitaleAdressenItem) {
        if (this.digitaleAdressen == null) {
            this.digitaleAdressen = new ArrayList<>();
        }
        this.digitaleAdressen.add(digitaleAdressenItem);
        return this;
    }

    /**
     * Betrokkene bij klantcontact die een partij was.
     * 
     * @return betrokkenen
     **/
    public List<ExpandBetrokkene> getBetrokkenen() {
        return betrokkenen;
    }


    /**
     * De Categorie relaties van een partij: Let op: Dit attribuut is EXPERIMENTEEL.
     * 
     * @return categorieRelaties
     **/
    public List<CategorieRelatie> getCategorieRelaties() {
        return categorieRelaties;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExpandPartijAllOfExpand expandPartijAllOfExpand = (ExpandPartijAllOfExpand) o;
        return Objects.equals(this.digitaleAdressen, expandPartijAllOfExpand.digitaleAdressen) &&
               Objects.equals(this.betrokkenen, expandPartijAllOfExpand.betrokkenen) &&
               Objects.equals(this.categorieRelaties, expandPartijAllOfExpand.categorieRelaties);
    }

    @Override
    public int hashCode() {
        return Objects.hash(digitaleAdressen, betrokkenen, categorieRelaties);
    }

    /**
     * Create a string representation of this pojo.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExpandPartijAllOfExpand {\n");

        sb.append("    digitaleAdressen: ").append(toIndentedString(digitaleAdressen)).append("\n");
        sb.append("    betrokkenen: ").append(toIndentedString(betrokkenen)).append("\n");
        sb.append("    categorieRelaties: ").append(toIndentedString(categorieRelaties)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
