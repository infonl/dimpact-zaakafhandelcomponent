/*
 * SPDX-FileCopyrightText: 2024 INFO.nl
 * SPDX-License-Identifier: EUPL-1.2+
 */

/**
 * klantinteracties
 * **Warning: Difference between `PUT` and `PATCH`** Both `PUT` and `PATCH` methods can be used to update the fields in a resource, but
 * there is a key difference in how they handle required fields: * The `PUT` method requires you to specify **all mandatory fields** when
 * updating a resource. If any mandatory field is missing, the update will fail. Optional fields are left unchanged if they are not
 * specified. * The `PATCH` method, on the other hand, allows you to update only the fields you specify. Some mandatory fields can be left
 * out, and the resource will only be updated with the provided data, leaving other fields unchanged.
 *
 * The version of the OpenAPI document: 0.1.2 (1)
 * Contact: standaarden.ondersteuning@vng.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package nl.info.client.klant.model;

import java.util.List;
import java.util.Objects;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;


/**
 * Display details of the linked resources requested in the `expand` parameter
 */

public class ExpandKlantcontactAllOfExpand {

    /**
     * Persoon of organisatie die betrokken was bij een klantcontact.
     */
    @JsonbProperty("had_betrokkenen")
    protected List<Betrokkene> hadBetrokkenen = null;

    /**
     * Klantcontact dat leidde tot een interne taak.
     */
    @JsonbProperty("leidde_tot_interne_taken")
    protected List<InterneTaak> leiddeTotInterneTaken = null;

    /**
     * Onderwerpobject dat tijdens een klantcontact aan de orde was.
     */
    @JsonbProperty("ging_over_onderwerpobjecten")
    protected List<Onderwerpobject> gingOverOnderwerpobjecten = null;

    /**
     * Bijlage die (een deel van) de inhoud van het klantcontact beschrijft.
     */
    @JsonbProperty("omvatte_bijlagen")
    protected List<Bijlage> omvatteBijlagen = null;

    public ExpandKlantcontactAllOfExpand() {
    }

    @JsonbCreator
    public ExpandKlantcontactAllOfExpand(
            @JsonbProperty(value = "had_betrokkenen", nillable = true) List<Betrokkene> hadBetrokkenen,
            @JsonbProperty(value = "leidde_tot_interne_taken", nillable = true) List<InterneTaak> leiddeTotInterneTaken,
            @JsonbProperty(value = "ging_over_onderwerpobjecten", nillable = true) List<Onderwerpobject> gingOverOnderwerpobjecten,
            @JsonbProperty(value = "omvatte_bijlagen", nillable = true) List<Bijlage> omvatteBijlagen
    ) {
        this.hadBetrokkenen = hadBetrokkenen;
        this.leiddeTotInterneTaken = leiddeTotInterneTaken;
        this.gingOverOnderwerpobjecten = gingOverOnderwerpobjecten;
        this.omvatteBijlagen = omvatteBijlagen;
    }

    /**
     * Persoon of organisatie die betrokken was bij een klantcontact.
     * 
     * @return hadBetrokkenen
     **/
    public List<Betrokkene> getHadBetrokkenen() {
        return hadBetrokkenen;
    }


    /**
     * Klantcontact dat leidde tot een interne taak.
     * 
     * @return leiddeTotInterneTaken
     **/
    public List<InterneTaak> getLeiddeTotInterneTaken() {
        return leiddeTotInterneTaken;
    }


    /**
     * Onderwerpobject dat tijdens een klantcontact aan de orde was.
     * 
     * @return gingOverOnderwerpobjecten
     **/
    public List<Onderwerpobject> getGingOverOnderwerpobjecten() {
        return gingOverOnderwerpobjecten;
    }


    /**
     * Bijlage die (een deel van) de inhoud van het klantcontact beschrijft.
     * 
     * @return omvatteBijlagen
     **/
    public List<Bijlage> getOmvatteBijlagen() {
        return omvatteBijlagen;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExpandKlantcontactAllOfExpand expandKlantcontactAllOfExpand = (ExpandKlantcontactAllOfExpand) o;
        return Objects.equals(this.hadBetrokkenen, expandKlantcontactAllOfExpand.hadBetrokkenen) &&
               Objects.equals(this.leiddeTotInterneTaken, expandKlantcontactAllOfExpand.leiddeTotInterneTaken) &&
               Objects.equals(this.gingOverOnderwerpobjecten, expandKlantcontactAllOfExpand.gingOverOnderwerpobjecten) &&
               Objects.equals(this.omvatteBijlagen, expandKlantcontactAllOfExpand.omvatteBijlagen);
    }

    @Override
    public int hashCode() {
        return Objects.hash(hadBetrokkenen, leiddeTotInterneTaken, gingOverOnderwerpobjecten, omvatteBijlagen);
    }

    /**
     * Create a string representation of this pojo.
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExpandKlantcontactAllOfExpand {\n");

        sb.append("    hadBetrokkenen: ").append(toIndentedString(hadBetrokkenen)).append("\n");
        sb.append("    leiddeTotInterneTaken: ").append(toIndentedString(leiddeTotInterneTaken)).append("\n");
        sb.append("    gingOverOnderwerpobjecten: ").append(toIndentedString(gingOverOnderwerpobjecten)).append("\n");
        sb.append("    omvatteBijlagen: ").append(toIndentedString(omvatteBijlagen)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
