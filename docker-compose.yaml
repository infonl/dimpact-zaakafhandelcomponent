services:
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.4
    depends_on:
      keycloak-database:
        condition: service_healthy
    ports:
      - "8081:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - DB_VENDOR=postgres
      - DB_ADDR=keycloak-database
      - DB_USER=keycloak
      - DB_NAME=keycloak
      - DB_PASSWORD=keycloak
      - LDAP_URL=ldap://openldap:1389
      - ZAC_GROUP_A_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_GROUP_A_EMAIL_ADDRESS:-test-group-a@example.com}
      - ZAC_GROUP_FUNCTIONEEL_BEHEERDERS_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_GROUP_FUNCTIONEEL_BEHEERDERS_EMAIL_ADDRESS:-test-group-functioneel-beheerders@example.com}
      - ZAC_GROUP_RECORD_MANAGERS_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_GROUP_RECORD_MANAGERS_EMAIL_ADDRESS:-test-group-record-managers@example.com}
    volumes:
      - ./scripts/docker-compose/imports/keycloak:/opt/keycloak/data/import
    command:
      - "start-dev"
      - "--import-realm"
      - "--hostname-url=http://localhost:8081"
      - "--health-enabled=true"
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  keycloak-database:
    image: postgres:15.4
    ports:
      - "54326:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 20s
      timeout: 60s
      retries: 5
      start_period: 30s
    environment:
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
      - POSTGRES_DB=keycloak
    volumes:
      - ./scripts/docker-compose/volume-data/zac-keycloak-database-data:/var/lib/postgresql/data
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  zac-database:
    image: postgres:15.4
    ports:
      - "54320:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 20s
      timeout: 60s
      retries: 5
      start_period: 30s
    environment:
      POSTGRES_USER: zac
      POSTGRES_PASSWORD: password
      POSTGRES_DB: zac
    volumes:
      - ./scripts/docker-compose/imports/zac-database/init-zac-database.sql:/docker-entrypoint-initdb.d/init-zac-database.sql
      - ./scripts/docker-compose/volume-data/zac-database-data:/var/lib/postgresql/data
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  openzaak-database:
    image: postgis/postgis:15-3.4
    ports:
      - "54322:5432"
    platform: linux/amd64
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 20s
      timeout: 60s
      retries: 5
      start_period: 30s
    environment:
      - POSTGRES_USER=openzaak
      - POSTGRES_PASSWORD=openzaak
      - POSTGRES_DB=openzaak
      - BAG_API_CLIENT_MP_REST_URL=${BAG_API_CLIENT_MP_REST_URL:-https://api.bag.acceptatie.kadaster.nl/lvbag/individuelebevragingen/v2/}
      - BAG_API_KEY=${BAG_API_KEY:-please-request-a-bag-api-key}
    volumes:
      - ./scripts/docker-compose/imports/openzaak-database:/docker-entrypoint-initdb.d
      - ./scripts/docker-compose/volume-data/openzaak-database-data:/var/lib/postgresql/data
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # This container name must contain a '.' or else Open Zaak will respond with a 400
  # error on certain API requests caused by an internal 'invalid URL' error.
  openzaak.local:
    image: openzaak/open-zaak:1.10.3
    platform: linux/amd64
    environment:
      - ALLOWED_HOSTS=localhost,host.docker.internal,openzaak.local
      - DB_HOST=openzaak-database
      - DB_NAME=openzaak
      - DB_PASSWORD=openzaak
      - DB_USER=openzaak
      - CACHE_DEFAULT=redis:6379/0
      - CACHE_AXES=redis:6379/0
      - DEBUG=true
      - DJANGO_SETTINGS_MODULE=openzaak.conf.docker
      - DJANGO_SUPERUSER_PASSWORD=admin
      - LOG_LEVEL=DEBUG
      - NOTIFICATIONS_DISABLED=true
      - OPENZAAK_SUPERUSER_USERNAME=admin
      - OPENZAAK_SUPERUSER_EMAIL=noreply@example.com
      - SECRET_KEY=openZaakSecretKey
      - SENDFILE_BACKEND=django_sendfile.backends.simple
    ports:
      - "8001:8000"
    volumes:
      - ./scripts/docker-compose/imports/openzaak/zac-scripts:/zac-scripts
      - ./scripts/docker-compose/imports/openzaak/uploads/dummy-test-document.pdf:/dummy-test-document.pdf
    command: ["/zac-scripts/copy-test-pdf-and-start-openzaak.sh"]
    depends_on:
      openzaak-database:
        condition: service_healthy
      redis:
        condition: service_started
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  redis:
    image: redis:6.2.6
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # This container name must contain a '.' or else Open Zaak will respond with a 400
  # error on certain API requests caused by an internal 'invalid URL' error.
  objecten-api.local:
    image: maykinmedia/objects-api:2.1.1
    platform: linux/amd64
    ports:
      - "8010:8000"
    environment: &objects-env
      - CORS_ALLOW_ALL_ORIGINS=true
      - SECRET_KEY=objectenApiSecretKey
      - DJANGO_SETTINGS_MODULE=objects.conf.docker
      - DB_HOST=objecten-api-database
      - DEBUG=true
      - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
      - TWO_FACTOR_PATCH_ADMIN=False
    depends_on:
      objecten-api-database:
        condition: service_healthy
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  objecten-api-database:
    image: postgis/postgis:15-3.4
    ports:
      - "54323:5432"
    platform: linux/amd64
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 20s
      timeout: 60s
      retries: 5
      start_period: 30s
    environment:
      - POSTGRES_USER=objects
      - POSTGRES_PASSWORD=objects
      - POSTGRES_DB=objects
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  objecten-api-import:
    image: maykinmedia/objects-api:2.1.1
    platform: linux/amd64
    environment: *objects-env
    # in the current version of django it is not possible to create a new user with password without user interaction by using the createsuperuser command
    command: sh init/init.sh
    volumes:
      - ./scripts/docker-compose/imports/objects-api/fixtures:/app/src/objects/fixtures
      - ./scripts/docker-compose/imports/objects-api/init:/app/init
    depends_on:
      - objecten-api.local
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  objecttypen-api:
    image: maykinmedia/objecttypes-api:2.1.0
    platform: linux/amd64
    ports:
      - "8011:8000"
    environment: &objecttypes-env
      - CORS_ALLOW_ALL_ORIGINS=true
      - SECRET_KEY=objecttypenApiSecretKey
      - DJANGO_SETTINGS_MODULE=objecttypes.conf.docker
      - DB_HOST=objecttypen-api-database
      - DEBUG=true
      - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
      - TWO_FACTOR_PATCH_ADMIN=False
    depends_on:
      objecttypen-api-database:
        condition: service_healthy
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  objecttypen-api-database:
    image: postgres:15.4
    ports:
      - "54324:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 20s
      timeout: 60s
      retries: 5
      start_period: 30s
    environment:
      - POSTGRES_USER=objecttypes
      - POSTGRES_PASSWORD=objecttypes
      - POSTGRES_DB=objecttypes
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  objecttypen-api-import:
    image: maykinmedia/objecttypes-api:2.1.0
    platform: linux/amd64
    environment: *objecttypes-env
    command: sh init/init.sh
    volumes:
      - ./scripts/docker-compose/imports/objecttypes-api/fixtures:/app/src/objecttypes/fixtures
      - ./scripts/docker-compose/imports/objecttypes-api/init:/app/init
    depends_on:
      - objecttypen-api
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  solr:
    image: solr:9.5.0-slim
    platform: linux/amd64
    ports:
      - "8983:8983"
    volumes:
      - ./scripts/docker-compose/volume-data/solr-data:/var/solr/data
    # run as root to change the permissions of the solr folder
    user: root
    # Change permissions of the solr folder, create the 'zac' core and start solr
    command: bash -c "
      chown -R 8983:8983 /var/solr
      && runuser -u solr -- solr-precreate zac"
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Open Policy Agent (OPA)
  opa:
    image: openpolicyagent/opa:edge-static
    command: run --server --log-level debug
    ports:
      - "8181:8181"
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  openldap:
    image: bitnami/openldap:2.6.7
    ports:
      - "1389:1389"
      - "1636:1636"
    volumes:
      - ./scripts/docker-compose/imports/openldap/schemas:/schemas
      - ./scripts/docker-compose/imports/openldap/zac-scripts:/zac-scripts
    environment:
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=admin
      - LDAP_ROOT=dc=example,dc=org
      - LDAP_SKIP_DEFAULT_TREE=yes
      - LDAP_CUSTOM_LDIF_DIR=/tmp
      - ZAC_TESTUSER1_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_TEST_USER_1_EMAIL_ADDRESS:-testuser1@example.com}
      - ZAC_TESTUSER2_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_TEST_USER_2_EMAIL_ADDRESS:-testuser2@example.com}
      - ZAC_RECORD_MANAGER_1_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_RECORD_MANAGER_1_EMAIL_ADDRESS:-recordmanager1@example.com}
      - ZAC_FUNCTIONAL_ADMIN_1_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_FUNCTIONAL_ADMIN_1_EMAIL_ADDRESS:-functionaladmin1@example.com}
      - ZAC_GROUP_A_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_GROUP_A_EMAIL_ADDRESS:-test-group-a@example.com}
      - ZAC_GROUP_FUNCTIONEEL_BEHEERDERS_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_GROUP_FUNCTIONEEL_BEHEERDERS_EMAIL_ADDRESS:-test-group-functioneel-beheerders@example.com}
      - ZAC_GROUP_RECORD_MANAGERS_EMAIL_ADDRESS=${DOCKER_COMPOSE_LDAP_GROUP_RECORD_MANAGERS_EMAIL_ADDRESS:-test-group-record-managers@example.com}
    entrypoint: ["/zac-scripts/generate-zac-import-ldif-and-start-openldap.sh"]
    command: ["/opt/bitnami/scripts/openldap/run.sh"]
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # VNG ZGW referentielijsten ('VRL') (see: https://github.com/VNG-Realisatie/VNG-referentielijsten)
  zgw-referentielijsten-database:
    image: postgres:15.4
    ports:
      - "54321:5432"
    environment:
      - POSTGRES_USER=vrl
      - POSTGRES_PASSWORD=vrl
      - POSTGRES_DB=vrl
    volumes:
      - ./scripts/docker-compose/volume-data/zgw-referentielijsten-database-data:/var/lib/postgresql/data
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # This container name must contain a '.' or else Open Zaak will respond with a 400
  # error on certain API requests caused by an internal 'invalid URL' error.
  zgw-referentielijsten.local:
    image: ghcr.io/infonl/vng-referentielijsten:0.6.1
    environment:
      - DB_HOST=zgw-referentielijsten-database
      - DB_NAME=vrl
      - DB_USER=vrl
      - DB_PASSWORD=vrl
      - DJANGO_SETTINGS_MODULE=vrl.conf.docker
      - SECRET_KEY=zgwReferentielijstenSecretKey
    ports:
      - "8020:8000"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://0.0.0.0:8000"]
      interval: 20s
      timeout: 60s
      retries: 5
      start_period: 30s
    depends_on:
      - zgw-referentielijsten-database
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Insert required test data into the VRL database after the VRL application has started up and finished initializing the database
  zgw-referentielijsten-database-init:
    image: postgres:15.4
    volumes:
      - ./scripts/docker-compose/imports/zgw-referentielijsten/init-zgw-referentielijsten-database.sql:/tmp/init-zgw-referentielijsten-database.sql
    command: bash -c "psql postgresql://vrl:vrl@zgw-referentielijsten-database/vrl < /tmp/init-zgw-referentielijsten-database.sql"
    depends_on:
      zgw-referentielijsten.local:
        condition: service_healthy
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # The GBA mock is required by the BRP proxy
  gbamock:
    image: ghcr.io/brp-api/haal-centraal-brp-bevragen-gba-mock:2.0.8
    platform: linux/amd64
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - ASPNETCORE_URLS=http://+:5010
      # Disable FileSystemWatcher because it causes this Docker container to
      # fail when running on an M3 Pro Mac with: "Unhandled exception.
      # System.IO.IOException: Function not implemented
      #   at System.IO.FileSystemWatcher.StartRaisingEvents()"
      - ASPNETCORE_hostBuilder__reloadConfigOnChange=false
    ports:
      - "5010:5010"
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  brpproxy:
    image: ghcr.io/brp-api/haal-centraal-brp-bevragen-proxy:2.1.1
    platform: linux/amd64
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - ASPNETCORE_URLS=http://+:5000
      # Disable FileSystemWatcher because it causes this Docker container to
      # fail when running on an M3 Pro Mac with: "Unhandled exception.
      # System.IO.IOException: Function not implemented
      #   at System.IO.FileSystemWatcher.StartRaisingEvents()"
      - ASPNETCORE_hostBuilder__reloadConfigOnChange=false
    ports:
      - "5001:5000"
    depends_on:
      - gbamock
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  openklant-database:
    image: postgres:15.4
    ports:
      - "54325:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 20s
      timeout: 60s
      retries: 5
      start_period: 30s
    environment:
      - POSTGRES_USER=openklant
      - POSTGRES_PASSWORD=openklant
      - POSTGRES_DB=openklant
    volumes:
      - ./scripts/docker-compose/imports/openklant-database:/docker-entrypoint-initdb.d
      - ./scripts/docker-compose/volume-data/openklant-database-data:/var/lib/postgresql/data
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  openklant:
    image: docker.io/maykinmedia/open-klant:0.5-pre
    platform: linux/amd64
    environment:
      - ALLOWED_HOSTS=localhost,host.docker.internal,openklant
      - DB_HOST=openklant-database
      - DB_USER=openklant
      - DB_PASSWORD=openklant
      - DB_NAME=openklant
      - CACHE_DEFAULT=redis:6379/0
      - CACHE_AXES=redis:6379/0
      - DJANGO_SETTINGS_MODULE=openklant.conf.docker
      - IS_HTTPS=no
      - NOTIFICATIONS_DISABLED=True
      - SECRET_KEY=openZaakSecretKey
    ports:
      - "8002:8000"
    depends_on:
      openklant-database:
        condition: service_healthy
      redis:
        condition: service_started
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  smartdocuments-wiremock:
    image: "wiremock/wiremock:3.3.1"
    ports:
      - "8082:8080"
    volumes:
      # these WireMock mappings are used by the ZAC integration tests
      - ./scripts/docker-compose/imports/smartdocuments-wiremock/mappings:/home/wiremock/mappings
    entrypoint: [ "/docker-entrypoint.sh", "--global-response-templating", "--disable-gzip", "--verbose" ]
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  office-converter:
    image: ghcr.io/eugenmayer/kontextwork-converter:1.5.0
    platform: linux/amd64
    ports:
      - "8083:8080"
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"

  otel-collector:
    image: otel/opentelemetry-collector:0.98.0
    command: [ --config=/etc/otel-collector-config.yaml ]
    volumes:
      - ./scripts/docker-compose/imports/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml:Z
    ports:
      - "1888:1888" # pprof extension
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension

  zac:
    # By default, we use the latest ZAC Docker Image. Change this if you wish to use a specific version.
    image: ${ZAC_DOCKER_IMAGE:-ghcr.io/infonl/zaakafhandelcomponent:latest}
    environment:
      - AUTH_REALM=zaakafhandelcomponent
      - AUTH_RESOURCE=zaakafhandelcomponent
      - AUTH_SECRET=keycloakZaakafhandelcomponentClientSecret
      - AUTH_SERVER=http://keycloak:8080
      - BAG_API_CLIENT_MP_REST_URL=https://api.bag.acceptatie.kadaster.nl/lvbag/individuelebevragingen/v2/
      - BAG_API_KEY=${BAG_API_KEY:-dummyBagApiKey}
      - BRP_API_CLIENT_MP_REST_URL=http://brpproxy:5000/haalcentraal/api/brp
      - BRP_API_KEY=dummyKey # not used when using the BRP proxy
      - CONTACTMOMENTEN_API_CLIENT_MP_REST_URL=http://openklant:8000/contactmomenten
      - CONTACTMOMENTEN_API_CLIENTID=zac_client
      - CONTACTMOMENTEN_API_SECRET=openklantZaakafhandelcomponentClientSecret
      - CONTEXT_URL=http://localhost:8080
      - DB_HOST=zac-database
      - DB_NAME=zac
      - DB_PASSWORD=password
      - DB_USER=zac
      - GEMEENTE_CODE=${GEMEENTE_CODE:-9999}
      - GEMEENTE_MAIL=${GEMEENTE_MAIL:-gemeente-zac-test@example.com}
      - GEMEENTE_NAAM=${GEMEENTE_NAAM:-DummyZacGemeente}
      - KLANTEN_API_CLIENT_MP_REST_URL=http://openklant:8000/klanten
      - KLANTEN_API_CLIENTID=zac_client
      - KLANTEN_API_SECRET=openklantZaakafhandelcomponentClientSecret
      - KVK_API_CLIENT_MP_REST_URL=${KVK_API_CLIENT_MP_REST_URL:-dummyKvkApiUrl}
      - KVK_API_KEY=${KVK_API_KEY:-dummyKvkApiKey}
      - LDAP_DN="ou=people,dc=example,dc=org"
      - LDAP_PASSWORD=admin
      - LDAP_URL=ldap://openldap:1389
      - LDAP_USER=cn=admin,dc=example,dc=org
      - MAILJET_API_KEY=${MAILJET_API_KEY:-dummyMailjetApiKey}
      - MAILJET_API_SECRET_KEY=${MAILJET_API_SECRET_KEY:-dummyMailjetApiSecretKey}
      - OFFICE_CONVERTER_CLIENT_MP_REST_URL=http://office-converter:8083
      - OBJECTS_API_CLIENT_MP_REST_URL=http://objecten-api.local:8000
      - OBJECTS_API_TOKEN=182c13e2209161852c53cef53a879f7a2f923430
      - OBJECTTYPES_API_CLIENT_MP_REST_URL=http://objecttypen-api:8000
      - OBJECTTYPES_API_TOKEN=dummyZacObjectTypesToken
      - OPA_API_CLIENT_MP_REST_URL=http://opa:8181
      - OPEN_FORMS_URL=http://localhost:9999 # dummy for now
      - OPEN_NOTIFICATIONS_API_SECRET_KEY=openNotificatiesApiSecretKey
      - SD_AUTHENTICATION=${SD_AUTHENTICATION:-dummySmartDocumentsAuthentication}
      - SD_CLIENT_MP_REST_URL=${SD_CLIENT_MP_REST_URL:-http://smartdocuments-wiremock:8080}
      - SD_FIXED_USER_NAME=${SD_FIXED_USER_NAME:-}
      - SOLR_URL=http://solr:8983
      - VRL_API_CLIENT_MP_REST_URL=http://zgw-referentielijsten.local:8000/
      - ZGW_API_CLIENT_MP_REST_URL=http://openzaak.local:8000/
      - ZGW_API_CLIENTID=zac_client
      - ZGW_API_SECRET=openzaakZaakafhandelcomponentClientSecret
      - ZGW_API_URL_EXTERN=http://localhost:8001/
    ports:
      - "8080:8080"
      - "9990:9990"
      - "14250:14250" # Open Telemetry endpoint
    volumes:
      # mount volumes for (optional) JaCoCo test coverage for our integration tests
      # see: https://blog.akquinet.de/2018/09/06/test-coverage-for-containerized-java-apps/
      - ./build/jacoco/itest/jacoco-agent:/jacoco-agent
      - ./build/jacoco/itest/jacoco-report:/jacoco-report
    entrypoint: [
      "sh",
      "-c",
      # entrypoint may be overridden by environment variable to pass on extra arguments
      "${ZAC_DOCKER_ENTRYPOINT:-java -Xms1024m -Xmx1024m -jar zaakafhandelcomponent.jar}",
    ]
    deploy:
      resources:
        limits:
          # Set a maximum memory limit for the ZAC container for a more realistic
          # scenario when testing ZAC locally or when running our integration tests.
          memory: 4G
    depends_on:
      zac-database:
        condition: service_healthy
    profiles: ["zac"]
    # Linux workaround for host.docker.internal support
    # see: https://stackoverflow.com/a/67158212
    extra_hosts:
      - "host.docker.internal:host-gateway"
