{{- if not .Values.nginx.existingConfigmap }}
{{- if .Values.nginx.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "zaakafhandelcomponent.nginx.fullname" . }}
  labels:
  {{- include "zaakafhandelcomponent.nginx.labels" . | nindent 4 }}
data:
  proxy: |
    proxy_pass_header Server;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 300s;
    proxy_read_timeout 300s;
    {{- if .Values.nginx.useXForwardedHost }}
    proxy_set_header X-Forwarded-Host $http_host;
    {{ else }}
    proxy_set_header Host $http_host;
    {{- end }}
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_redirect off;
    proxy_pass_request_headers on;
    proxy_pass http://{{ include "zaakafhandelcomponent.fullname" . }}.{{ .Release.Namespace }}:{{ .Values.service.port }};
    proxy_http_version 1.1;  # required if you're using istio, otherwise you get HTTP 426 errors

  default.conf: |
    proxy_cache_path /tmp keys_zone=static_cache:10m;

    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }

    server {
      listen       8080 default_server;
      server_name {{ .Values.nginx.allowedHosts  | replace "," " "}} localhost;
      server_tokens off;

      gzip on;
      gzip_http_version 1.0;
      gzip_comp_level 2;
      gzip_min_length 1100;
      gzip_buffers 4 8k;
      gzip_proxied any;
      gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/json
        application/xml
        application/rss+xml
        font/truetypenginc
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;
      gzip_static on;
      gzip_proxied  expired no-cache no-store private auth;
      gzip_disable "MSIE [1-6]\.";
      gzip_vary on;

      add_header Feature-Policy "autoplay 'none'; camera 'none'" always;
      add_header Referrer-Policy "same-origin";
      add_header X-Content-Type-Options "nosniff";
      add_header X-XSS-Protection "1; mode=block";
      add_header Strict-Transport-Security max-age=15768000;

      error_page 555 = @longtimeout;
      error_page 556 = @normal;

      location / {
        include conf.d/proxy;
        set $first "B";
        if ($request_uri ~* '^/websocket') {
          set $first "${first}W";
        }
        if ($first = 'BW') {
          return 555;
        }
        return 556;
      }

      location @normal {
        include conf.d/proxy
        client_max_body_size {{ .Values.nginx.client_max_body_size }};
      }

      location @longtimeout {
        include conf.d/proxy
        client_max_body_size {{ .Values.nginx.client_max_body_size }};
        proxy_read_timeout 1d;
        proxy_send_timeout 1d;
      }

      location ~* \.woff2$ {
        include conf.d/proxy
        proxy_cache static_cache;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_cache_valid 30d;
        expires 30d;
        proxy_set_header Cache-Control private;
        proxy_ignore_headrs Expires Cache-Control;
      }

      location /_health/ {
        access_log off;
        error_log /var/log/nginx/error.log error;
        return 200 'OK';
      }

    }
{{- end }}
{{- end }}
