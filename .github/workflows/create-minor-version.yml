#
# SPDX-FileCopyrightText: 2025 INFO.nl
# SPDX-License-Identifier: EUPL-1.2+
#
name: Create Minor Version

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "yes" to confirm creating a new minor version'
        required: true
        default: 'no'

env:
  JAVA_VERSION: "21.0.7"
  CONTAINER_REGISTRY_URL: "ghcr.io/infonl"
  APPLICATION_NAME: "zaakafhandelcomponent"

permissions:
  contents: write
  packages: write

jobs:
  validate-input:
    runs-on: ubuntu-24.04
    steps:
      - name: Check confirmation
        if: ${{ github.event.inputs.confirm != 'yes' }}
        run: |
          echo "You must type 'yes' to confirm creating a new minor version."
          exit 1

  create-minor-version:
    needs: validate-input
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.get-version.outputs.replaced }}
      tag: ${{ steps.get-tag.outputs.new_tag }}
    steps:
      # Checkout the repository including tags
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      # Determine the next minor version based on the latest tag
      - name: Get next minor version tag
        id: get-tag
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c # 1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE: false
          DEFAULT_BUMP: minor
          WITH_V: true
          RELEASE_BRANCHES: main

      - name: Get version without 'v' prefix
        id: get-version
        uses: frabert/replace-string-action@b6828c5a4cb6371753ff873b0d1c4c4fbd9a63cb # v2.5
        with:
          pattern: 'v(.*)'
          string: ${{ steps.get-tag.outputs.new_tag }}
          replace-with: '$1'

      - name: Print new tag and version
        run: |
          echo "Next minor version: ${{ steps.get-version.outputs.replaced }}"
          echo "Next minor version tag: ${{ steps.get-tag.outputs.new_tag }}"

  build-docker-image:
    needs: create-minor-version
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    env:
      NEXT_VERSION: ${{ needs.create-minor-version.outputs.version }}
      NEXT_VERSION_TAG: ${{ needs.create-minor-version.outputs.tag }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v4.4.0

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v4.4.0

      - name: Gradle build
        run: ./gradlew build -x test --info --no-configuration-cache

      - name: Set Docker image tag
        id: gen_tag
        run: echo "ZAC_DOCKER_IMAGE=${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${{ env.NEXT_VERSION }}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build Docker image
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0
        with:
          tags: ${{ steps.gen_tag.outputs.ZAC_DOCKER_IMAGE }}
          build-args: |
            versionNumber=${{ env.NEXT_VERSION }}
            branchName=main
            commitHash=${{ github.sha }}
          context: .
          load: true
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker Login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.CONTAINER_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag Docker Image with version tags
        run: |
          # Tag with the full version
          docker tag ${{ steps.gen_tag.outputs.ZAC_DOCKER_IMAGE }} ${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${{ env.NEXT_VERSION }}
          
          # Tag with major and major.minor versions
          MAJOR_VERSION=$(echo ${{ env.NEXT_VERSION }} | cut -d '.' -f 1)
          MINOR_VERSION=$(echo ${{ env.NEXT_VERSION }} | cut -d '.' -f 2)
          docker tag ${{ steps.gen_tag.outputs.ZAC_DOCKER_IMAGE }} ${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${MAJOR_VERSION}
          docker tag ${{ steps.gen_tag.outputs.ZAC_DOCKER_IMAGE }} ${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${MAJOR_VERSION}.${MINOR_VERSION}

      - name: Push Docker Image with all tags
        run: docker push --all-tags ${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}

  create-release:
    needs: [create-minor-version, build-docker-image]
    runs-on: ubuntu-24.04
    env:
      NEXT_VERSION: ${{ needs.create-minor-version.outputs.version }}
      NEXT_VERSION_TAG: ${{ needs.create-minor-version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Create GitHub release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1.16.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.NEXT_VERSION_TAG }}
          name: ${{ env.APPLICATION_NAME }} ${{ env.NEXT_VERSION }} (Minor Version)
          body: |
            This is a new minor version release of ${{ env.APPLICATION_NAME }} ${{ env.NEXT_VERSION }}.
            
            The Docker image is available at ${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${{ env.NEXT_VERSION }}
          draft: false
          prerelease: false
          allowUpdates: true
          makeLatest: true
          generateReleaseNotes: true
