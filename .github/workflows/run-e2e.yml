#
# SPDX-FileCopyrightText: 2023 Lifely
# SPDX-License-Identifier: EUPL-1.2+
#
name: Playwright Tests
on:
  schedule:
    # Runs at 9:00 PM UTC from Monday to Friday
    - cron: "0 21 * * 1-5"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  playwright:
    name: "Playwright Tests"
    runs-on: ubuntu-24.04
    environment: azure-dimpact-dta
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_OUTPUT
      - name: login to azure and allow pssessions
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          enable-AzPSSession: true
      - name: check IP
        run: |
          my_ip=$(curl https://api.ipify.org)
          echo "my_ip=$my_ip" >> $GITHUB_ENV
      - name: add ip to nsg
        uses: azure/CLI@089eac9d8cc39f5d003e94f8b65efc51076c9cbd # v2.1.0
        with:
          azcliversion: "latest"
          inlineScript: |
            az network nsg rule create -g zac-infra --nsg-name k8s-test-nsg -n allow_github_runner --priority 295 --source-address-prefixes ${{ env.my_ip }} --destination-port-ranges '*' --direction Inbound --access allow --protocol '*' --destination-address-prefixes '*'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20
      - name: Install dependencies
        run: cd src/e2e && npm ci
      - name: Install Playwright Browsers
        run: cd src/e2e && npx playwright install --with-deps
      - name: Run your tests
        run: 'cd src/e2e && npm run e2e:run -- --world-parameters "{\"urls\": { \"zac\": \"${{ secrets.ZAC_URL }}\", \"openForms\": \"${{ secrets.OPEN_FORMS_URL }}\" }, \"headless\": true, \"users\": { \"Bob\": { \"username\": \"${{ secrets.ZAC_E2E_TEST_USER_1_USERNAME }}\", \"password\": \"${{ secrets.ZAC_E2E_TEST_USER_1_PASSWORD }}\"}, \"Oscar\": { \"username\": \"${{ secrets.ZAC_E2E_TEST_USER_2_USERNAME }}\", \"password\": \"${{ secrets.ZAC_E2E_TEST_USER_2_PASSWORD }}\"}}}"'
      - name: Make a playwright report
        if: always()
        run: "cd src/e2e && npm run e2e:generate:report"
      - name: copy report to seperate folder
        if: always()
        run: "cd src/e2e && mv reports ${{ steps.date.outputs.date }} && mkdir reports && mv ${{ steps.date.outputs.date }} reports/"

      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Upload pages artifact
        if: always()
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        id: artifact
        with:
          name: playwright-report
          path: 'src/e2e/reports'
          retention-days: 180

      - name: Deploy to GitHub Pages
        if: ${{ !cancelled() && github.ref == 'refs/heads/main' }}
        id: published_site
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

      - name: Notify Slack
        if: ${{ !cancelled() && github.ref == 'refs/heads/main' }}
        uses: 8398a7/action-slack@1750b5085f3ec60384090fb7c52965ef822e869e # v3.18.0
        with:
          status: custom
          fields: workflow,job,status
          custom_payload: |
            {
              "text": ":performing_arts: Playwright Tests Update",
              "attachments": [
                {
                  "color": "${{ job.status == 'success' && 'good' || job.status == 'failure' && 'danger' || 'warning' }}",
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "Workflow Run Details"
                      }
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Repository:*\n${{ github.repository }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Workflow:*\n${{ github.workflow }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Job:*\n${{ github.job }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Status:*\n${{ job.status }} ${{ job.status == 'success' && ':white_check_mark:' || ':x:' }}"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Report URL (latest run only):*\n:link: ${{ steps.published_site.outputs.page_url }}/${{ steps.date.outputs.date }}/e2e-report.html\n*Archived report (max 6 months):* :floppy_disk: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.artifact.outputs.artifact_id }}"
                      }
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "Latest Report"
                          },
                          "url": "${{ steps.published_site.outputs.page_url }}/${{ steps.date.outputs.date }}/e2e-report.html"
                        },
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "Latest Run"
                          },
                          "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                        },
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "Latest Videos"
                          },
                          "url": "${{ steps.published_site.outputs.page_url }}/${{ steps.date.outputs.date }}/videos.html"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: remove nsg rule by name
        if: always()
        uses: azure/CLI@089eac9d8cc39f5d003e94f8b65efc51076c9cbd # v2.1.0
        with:
          azcliversion: "latest"
          inlineScript: |
            az network nsg rule delete -g zac-infra --nsg-name k8s-test-nsg -n allow_github_runner
