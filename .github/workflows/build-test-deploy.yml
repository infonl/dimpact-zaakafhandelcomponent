#
# SPDX-FileCopyrightText: 2023 INFO.nl
# SPDX-License-Identifier: EUPL-1.2+
#
name: Build, test & deploy

on:
  pull_request:
  merge_group:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Select the version bump.'
        type: choice
        required: true
        default: 'patch'
        options:
          - patch
          - minor
          - major
  push:
    branches:
      - main
    paths-ignore:
      # ignore pushes to the publiccode.yaml file or else we would trigger an endless build loop
      - 'publiccode.yaml'

env:
  JAVA_VERSION: "21.0.7"
  CONTAINER_REGISTRY_URL: "ghcr.io/infonl"
  APPLICATION_NAME: "zaakafhandelcomponent"

permissions:
  contents: write
  packages: write
  checks: write
  pull-requests: write
  # Required for uploading SARIF reports
  security-events: write

# Only allow a single concurrent run per branch. Cancel in-progress runs on multiple pushes when not on main branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'main')}}

jobs:
  validate-input:
    runs-on: ubuntu-24.04
    outputs:
      version-bump: ${{ github.event.inputs.confirm || 'patch' }}
    steps:
      - name: Use selected version bump
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "Version will be bumped to next ${{ github.event.inputs.confirm || 'patch' }} number."

      - name: Manual version bump only allowed on main branch
        if: ${{ github.ref != 'refs/heads/main' && github.event_name == 'workflow_dispatch' }}
        run: |
          echo "Version can only be bumped on the main branch!"
          exit 1

  paths-filter:
    runs-on: ubuntu-24.04
    needs: validate-input
    outputs:
      changes-requiring-build: ${{ steps.paths-filter.outputs.changes-requiring-build }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Skip job when only certain files or file types are changed which do not require a pull request build
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: paths-filter
        with:
          # the field below incorrectly results in a schema validation. see: https://github.com/dorny/paths-filter/issues/225
          predicate-quantifier: 'every'
          # Please keep this list in sync with the one in the 'codeql.yml' workflow
          filters: |
            changes-requiring-build:
              - '**'
              - '!**/*.md'
              - '!**/*.pdf'       
              - '!**/*.png'                 
              - '!charts/**'          
              - '!docs/**'          
              - '!*.sh'
              - '!.github/CODEOWNERS'

  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.changes-requiring-build == 'true' || github.ref == 'refs/heads/main'}}
    outputs:
      branch_name: ${{ steps.gen_branch_name.outputs.BRANCH_NAME }}
      build_number: ${{ steps.gen_build_number.outputs.BUILD_NUMBER }}
      zac_docker_image: ${{ steps.gen_tag.outputs.ZAC_DOCKER_IMAGE }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set branch name
        id: gen_branch_name
        run: echo "BRANCH_NAME=${{ github.ref_name }}" | sed 's/\//_/g; s/(//g; s/)//g' >> $GITHUB_OUTPUT

      - name: Set build number
        id: gen_build_number
        run: echo "BUILD_NUMBER=${{ steps.gen_branch_name.outputs.BRANCH_NAME }}-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Set Docker image tag
        id: gen_tag
        run: echo "ZAC_DOCKER_IMAGE=${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${{ steps.gen_build_number.outputs.BUILD_NUMBER }}" >> $GITHUB_OUTPUT

      - name: Setup JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          # Use the Maven cache here so that Maven artefacts (Maven build is triggered from the Gradle build) are cached.
          cache: 'maven'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1

      # The Gradle build also executes a Maven command to build the WildFly bootable JAR.
      # Disable the Gradle Configuration Cache for now because we sometimes run into a similar issue to:
      # https://github.com/diffplug/spotless/issues/651
      - name: Gradle build
        run: |
          ./gradlew build -x test --info --no-configuration-cache --rerun-tasks

      - name: Cache Gradle build artefacts
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            build
          key: build-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Cache generated Java clients
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            src/generated
          key: generated-java-clients-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Cache built frontend artefacts
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            src/main/app/dist/zaakafhandelcomponent
            src/main/app/src/generated/types
          key: built-frontend-artefacts-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Cache built ZAC JAR
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            target/zaakafhandelcomponent.jar
          key: zac-jar-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

  run-unit-tests:
    needs: [build, paths-filter]
    if: ${{ needs.paths-filter.outputs.changes-requiring-build == 'true' || github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    env:
      READ_PACKAGES_USERNAME: $${{ vars.READ_PACKAGES_USERNAME }}
      READ_PACKAGES_TOKEN: ${{ secrets.READ_PACKAGES_TOKEN }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1

      - name: Restore Gradle build artefacts
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            build
          key: build-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Restore built frontend artefacts
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            build
          key: built-frontend-artefacts-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Restore generated Java clients
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            src/generated
          key: generated-java-clients-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Run unit tests
        run: ./gradlew -x processResources -x classes test --info --rerun-tasks

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2.20.0
        if: ${{ !cancelled() }}
        with:
          check_name: unit-test-results
          files: |
            build/test-results/**/*.xml
            src/main/app/reports/*.xml

      - name: Upload unit test results to CodeCov
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        if: ${{ github.event_name != 'merge_group' && !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests

      - name: Generate unit test code coverage report
        if: ${{ github.event_name != 'merge_group' }}
        run: |
          ./gradlew -x compileJava -x processResources -x compileKotlin -x classes -x test -x itest -x npmRunBuild \
          npmRunTestCoverage jacocoTestReport \
          --info 

      - name: Upload unit test coverage report to Codecov
        if: ${{ github.event_name != 'merge_group' }}
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          flags: unittests
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  next-version:
    needs: [validate-input]
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.get-version.outputs.replaced }}
      tag: ${{ github.ref == 'refs/heads/main' && steps.get-tag-main.outputs.new_tag || steps.get-tag-non-main.outputs.new_tag }}
    steps:
      # Checkout the repository including tags
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      # Determine the next semantic version based on the commit message tags
      - name: Get next tag on main
        id: get-tag-main
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c # 1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE: false
          DEFAULT_BUMP: ${{ needs.validate-input.outputs.version-bump }}
          FORCE_WITHOUT_CHANGES: ${{ needs.validate-input.outputs.version-bump != 'patch' }}
          WITH_V: true
          RELEASE_BRANCHES: main
          BRANCH_HISTORY: last
      # If not on main, Determine the next semantic version based on the commit message tags without pushing tags`
      - name: Get next tag on non-main
        id: get-tag-non-main
        if: ${{ github.ref != 'refs/heads/main'}}
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c # 1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE: false
          DEFAULT_BUMP: ${{ needs.validate-input.outputs.version-bump }}
          WITH_V: true
          RELEASE_BRANCHES: main
          DRY_RUN: true
          BRANCH_HISTORY: last
      - name: Get next version
        id: get-version
        uses: frabert/replace-string-action@b6828c5a4cb6371753ff873b0d1c4c4fbd9a63cb # v2.5
        with:
          pattern: 'v(.*)'
          string: ${{ github.ref == 'refs/heads/main' && steps.get-tag-main.outputs.new_tag || steps.get-tag-non-main.outputs.new_tag }}
          replace-with: '$1'
      - name: Print new tag and version
        run: |
          echo "Next version: ${{ steps.get-version.outputs.replaced }}"
          echo "Next version tag: ${{ github.ref == 'refs/heads/main' && steps.get-tag-main.outputs.new_tag || steps.get-tag-non-main.outputs.new_tag }}"
      - name: Comment next version on PR
        if: github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body ":tada: Merging this PR at this moment should result in version ${{ steps.get-version.outputs.replaced }}"

  build-docker-image-and-run-itests:
    needs: [build, paths-filter, next-version, validate-input]
    # Do not run in the merge queue and do not run if the paths-filter step defines it to skip
    # but always run for the main branch
    if: ${{ (github.event_name != 'merge_group' && needs.paths-filter.outputs.changes-requiring-build == 'true') || github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    env:
      BUILD_NUMBER: ${{ needs.build.outputs.build_number }}
      BRANCH_NAME: ${{ needs.build.outputs.branch_name }}
      ZAC_DOCKER_IMAGE: ${{ needs.build.outputs.zac_docker_image }}
      GIT_COMMIT_HASH: ${{ github.sha }}
      BAG_API_CLIENT_MP_REST_URL: $${{ vars.BAG_API_CLIENT_MP_REST_URL }}
      BAG_API_KEY: ${{ secrets.BAG_API_KEY }}
      NEXT_VERSION: ${{ needs.next-version.outputs.version }}
    steps:
      # workaround to avoid 'No space left on device' error
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: true
          # do not clean up Docker images since we need them
          docker-images: false
          # disable cleaning up large packages since this takes a long time
          large-packages: false

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: authenticate with docker hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1

      - name: Restore built ZAC JAR
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            target/zaakafhandelcomponent.jar
          key: zac-jar-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          tags: ${{ env.ZAC_DOCKER_IMAGE }}
          build-args: |
            versionNumber=${{ env.NEXT_VERSION }}
            branchName=${{ env.BRANCH_NAME }}
            commitHash=${{ env.GIT_COMMIT_HASH }}
          context: .
          load: true
          push: false
          # use GitHub Actions cache to speed up the build
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run integration tests
        run: |
          ./gradlew -PzacDockerImage=${ZAC_DOCKER_IMAGE} \
            -x compileJava -x processResources -x compileKotlin -x classes -x buildDockerImage \
            itest --info --rerun-tasks

      - name: Upload integration test results to CodeCov
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        if: ${{ !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: integrationtests

      - name: Publish integration test results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2.20.0
        if: ${{ !cancelled() }}
        with:
          check_name: integration-test-results
          files: |
            build/test-results/itest/**/*.xml

      # JaCoCo requires our Java class files to be able to generate a report
      # so restore the Gradle build artefacts from the cache
      - name: Restore Gradle build artefacts
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            build
          key: build-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Generate JaCoCo integration test code coverage report
        run: ./gradlew jacocoIntegrationTestReport -x itest --info

      - name: Upload integration test coverage report to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          flags: integrationtests
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Run Trivy vulnerability scanner
        if: github.ref == 'refs/heads/main'
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        with:
          image-ref: '${{ env.ZAC_DOCKER_IMAGE }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          # limit the severities even when using Sarif
          # or else all vulnerabilities will be reported
          limit-severities-for-sarif: true
          severity: 'CRITICAL,HIGH'
        env:
          # skip downloading the Trivy databases since we update the Trivy cache regularly
          # in another workflow
          TRIVY_SKIP_DB_UPDATE: true
          TRIVY_SKIP_JAVA_DB_UPDATE: true

      - name: Upload Trivy scan results to GitHub Security tab
        if: github.ref == 'refs/heads/main'
        uses: github/codeql-action/upload-sarif@181d5eefc20863364f96762470ba6f862bdef56b # v3.29.2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Save Docker Image
        if: github.ref == 'refs/heads/main'
        run: docker save --output docker-image.tar ${ZAC_DOCKER_IMAGE}

      - name: Cache ZAC Docker Image
        if: github.ref == 'refs/heads/main'
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: docker-image.tar
          key: docker-image-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

  push-docker-image:
    needs: [build, run-unit-tests, build-docker-image-and-run-itests, next-version]
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    # Avoid infinite build loop on renovate updates
    if: ${{ github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'update ghcr.io/infonl/zaakafhandelcomponent docker tag') && !contains(github.event.head_commit.message, 'update dependency infonl/dimpact-zaakafhandelcomponent to') }}
    env:
      ZAC_DOCKER_IMAGE: ${{ needs.build.outputs.zac_docker_image }}
      NEXT_VERSION: ${{ needs.next-version.outputs.version }}
    steps:
      - name: Docker Login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.CONTAINER_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore Docker Image
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: docker-image.tar
          key: docker-image-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Load Docker Image
        run: docker load --input docker-image.tar

      - name: Tag Docker Image with 'latest' tag
        run: docker tag ${ZAC_DOCKER_IMAGE} ${CONTAINER_REGISTRY_URL}/${APPLICATION_NAME}:latest

      - name: Tag Docker Image with next version tag
        if: env.NEXT_VERSION != ''
        run: |
          docker tag ${ZAC_DOCKER_IMAGE} ${CONTAINER_REGISTRY_URL}/${APPLICATION_NAME}:${NEXT_VERSION}
          # Additionaly tag the image with '$major' and '$major.$minor' tags
          MAJOR_VERSION=$(echo ${NEXT_VERSION} | cut -d '.' -f 1)
          MINOR_VERSION=$(echo ${NEXT_VERSION} | cut -d '.' -f 2)
          docker tag ${ZAC_DOCKER_IMAGE} ${CONTAINER_REGISTRY_URL}/${APPLICATION_NAME}:${MAJOR_VERSION}
          docker tag ${ZAC_DOCKER_IMAGE} ${CONTAINER_REGISTRY_URL}/${APPLICATION_NAME}:${MAJOR_VERSION}.${MINOR_VERSION}

      - name: Push Docker Image with all tags
        run: docker push --all-tags ${CONTAINER_REGISTRY_URL}/${APPLICATION_NAME}

  create-release:
    needs: [next-version, push-docker-image]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    env:
      NEXT_VERSION: ${{ needs.next-version.outputs.version }}
      NEXT_VERSION_TAG: ${{ needs.next-version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Create or update GitHub release
        uses: ncipollo/release-action@bcfe5470707e8832e12347755757cec0eb3c22af # v1.18.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.NEXT_VERSION_TAG }}
          name: ${{ env.APPLICATION_NAME }} ${{ env.NEXT_VERSION }}
          body: |
            This release contains the docker image ${{ env.APPLICATION_NAME }} ${{ env.NEXT_VERSION }}, which is available
            at ${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${{ env.NEXT_VERSION }}
          draft: false
          prerelease: false
          allowUpdates: true
          makeLatest: true
          generateReleaseNotes: true

  trigger-provision:
    needs: [next-version, push-docker-image, create-release]
    env:
      NEXT_VERSION: ${{ needs.next-version.outputs.version }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    if: ${{ github.ref == 'refs/heads/main' && vars.ENABLE_AUTOMATIC_PROVISION == 'true' }}
    steps:
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.PROVISION_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'infonl',
              repo: 'dimpact-provisioning',
              workflow_id: 'azure-provision-zaakafhandelcomponent.yml',
              inputs: {
                tag: '${{ env.NEXT_VERSION }}',
              },
              ref: 'main'
            })
