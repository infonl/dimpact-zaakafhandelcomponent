[versions]
kotlin = "2.2.0"
kotlinx-coroutines = "1.10.2"
jsonschema2pojo = "1.2.2"
kotlin-csv = "1.10.0"
openapi = "4.1.1"
openapi-generator = "7.14.0"
opentelemetry = "1.51.0"
opentelemetry-instrumentation = "2.17.0"
node-gradle = "7.1.0"
taskinfo = "2.2.0"
detekt = "1.23.8"
spotless = "6.25.0"
spotless-eclipse-formatter = "4.21"
spotless-prettier-base = "3.4.2"
spotless-prettier-organize-imports = "4.1.0"
jacoco = "0.8.13"
glassfish-expressly = "6.0.0"
keycloak = "25.0.6"

apache-commons-lang = "3.17.0"
apache-commons-text = "1.13.1"
apache-commons-collections = "4.5.0"
commons-io = "2.19.0"
opencsv = "5.11.2"
flowable = "7.1.0"
slf4j = "2.0.17"
auth0-java-jwt = "4.5.0"
javax-cache = "1.1.1"
google-guava = "33.4.8-jre"
itextpdf = "9.2.0"
itextpdf-html2pdf = "6.2.0"
flyway = "11.10.0"
apache-solr = "9.8.1"
webdav-servlet = "1.2.171"
htmlcleaner = "2.29"
infinispan = "15.2.4.Final"
apache-httpclient = "4.5.14"
reactive-streams = "1.0.4"
jakarta-mail = "2.1.3"
caffeine = "3.2.1"
jackson = "2.19.1"
jacobras-human-readable = "1.12.0"

# Versions of dependencies provided by Wildfly.
# These need to be updated manually when upgrading WildFly.
# Please follow the instructions in 'updatingDependencies.md' when upgrading WildFly.
eclipse-microprofile-rest-client-api = "4.0"
# Unfortunately the OpenAPI Generator library that we use to generate model classes from OpenAPI specs
# does not support the latest version of the Eclipse MicroProfile Rest Client API.
openapi-generator-eclipse-microprofile-rest-client-api = "3.0"
eclipse-microprofile-config-api = "3.1"
eclipse-microprofile-health-api = "4.0.1"
eclipse-microprofile-fault-tolerance-api = "4.1.2"
hibernate-validator = "8.0.2.Final"
jakarta-jakartaee = "10.0.0"
jboss-resteasy-multipart-provider = "6.2.12.Final"
wildfly-security-elytron-http-oidc = "2.6.4.Final"
# ~Versions of dependencies provided by Wildfly.

eclipse-yasson = "3.0.4"

kotest-runner-junit5 = "5.9.1"
kotest-assertions-json = "5.9.1"
mockk = "1.14.4"

testcontainers = "1.21.3"

json-json = "20250517"
slf4j-simple = "2.0.17"

github-kotlin-logging = "7.0.7"
okhttp = "4.12.0"

[libraries]
apache-commons-lang = { group = "org.apache.commons", name = "commons-lang3", version.ref = "apache-commons-lang" }
apache-commons-text = { group = "org.apache.commons", name = "commons-text", version.ref = "apache-commons-text" }
apache-commons-collections = { group = "org.apache.commons", name = "commons-collections4", version.ref = "apache-commons-collections" }
commons-io = { group = "commons-io", name = "commons-io", version.ref = "commons-io" }
opencsv = { group = "com.opencsv", name = "opencsv", version.ref = "opencsv" }
flowable-engine = { group = "org.flowable", name = "flowable-engine", version.ref = "flowable" }
flowable-cdi = { group = "org.flowable", name = "flowable-cdi", version.ref = "flowable" }
flowable-cmmn-engine = { group = "org.flowable", name = "flowable-cmmn-engine", version.ref = "flowable" }
flowable-cmmn-cdi = { group = "org.flowable", name = "flowable-cmmn-cdi", version.ref = "flowable" }
flowable-cmmn-engine-configurator = { group = "org.flowable", name = "flowable-cmmn-engine-configurator", version.ref = "flowable" }
slf4j-jdk14 = { group = "org.slf4j", name = "slf4j-jdk14", version.ref = "slf4j" }
auth0-java-jwt = { group = "com.auth0", name = "java-jwt", version.ref = "auth0-java-jwt" }
javax-cache-api = { group = "javax.cache", name = "cache-api", version.ref = "javax-cache" }
google-guava = { group = "com.google.guava", name = "guava", version.ref = "google-guava" }
itextpdf-kernel = { group = "com.itextpdf", name = "kernel", version.ref = "itextpdf" }
itextpdf-layout = { group = "com.itextpdf", name = "layout", version.ref = "itextpdf" }
itextpdf-io = { group = "com.itextpdf", name = "io", version.ref = "itextpdf" }
itextpdf-html2pdf = { group = "com.itextpdf", name = "html2pdf", version.ref = "itextpdf-html2pdf" }
flyway-core = { group = "org.flywaydb", name = "flyway-core", version.ref = "flyway" }
flyway-postgresql = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref = "flyway" }
apache-solr = { group = "org.apache.solr", name = "solr-solrj", version.ref = "apache-solr" }
webdav-servlet = { group = "nl.info.webdav", name = "webdav-servlet", version.ref = "webdav-servlet" }
htmlcleaner = { group = "net.sourceforge.htmlcleaner", name = "htmlcleaner", version.ref = "htmlcleaner" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlin-csv-jvm = { group = "com.jsoizo", name = "kotlin-csv-jvm", version.ref = "kotlin-csv" }
jacobras-human-readable = { group = "nl.jacobras", name = "Human-Readable", version.ref = "jacobras-human-readable" }
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }

infinispan-jcache = { group = "org.infinispan", name = "infinispan-jcache", version.ref = "infinispan" }
infinispan-cdi-embedded = { group = "org.infinispan", name = "infinispan-cdi-embedded", version.ref = "infinispan" }

apache-httpclient = { group = "org.apache.httpcomponents", name = "httpclient", version.ref = "apache-httpclient" }
reactive-streams = { group = "org.reactivestreams", name = "reactive-streams", version.ref = "reactive-streams" }
jakarta-mail = { group = "jakarta.mail", name = "jakarta.mail-api", version.ref = "jakarta-mail" }

caffeine = { group = "com.github.ben-manes.caffeine", name = "caffeine", version.ref = "caffeine" }

jackson-core = { group = "com.fasterxml.jackson.core", name = "jackson-core", version.ref = "jackson" }
jackson-annotations = { group = "com.fasterxml.jackson.core", name = "jackson-annotations", version.ref = "jackson" }
jackson-jsr310 = { group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jsr310", version.ref = "jackson" }
jackson-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }

opentelemetry-api = { group = "io.opentelemetry", name = "opentelemetry-api", version.ref = "opentelemetry" }
opentelemetry-instrumentation-annotations = { group = "io.opentelemetry.instrumentation", name = "opentelemetry-instrumentation-annotations", version.ref = "opentelemetry-instrumentation" }
opentelemetry-extension-kotlin = { group = "io.opentelemetry", name = "opentelemetry-extension-kotlin", version.ref = "opentelemetry" }

glassfish-expressly = { group = "org.glassfish.expressly", name = "expressly", version.ref = "glassfish-expressly" }
# please keep the Keycloak admin client version in sync with the Keycloak version in our Docker Compose file
keycloak-admin-client = { group = "org.keycloak", name = "keycloak-admin-client", version.ref = "keycloak" }

# dependencies provided by Wildfly
# update these versions when upgrading WildFly
# you can find most of these dependencies in the WildFly pom.xml file
# of the WidFly version you are using on https://github.com/wildfly/wildfly
# for others you need to check the 'modules' directory of your local WildFly installtion
eclipse-microprofile-rest-client-api = { group = "org.eclipse.microprofile.rest.client", name = "microprofile-rest-client-api", version.ref = "eclipse-microprofile-rest-client-api" }
eclipse-microprofile-config-api = { group = "org.eclipse.microprofile.config", name = "microprofile-config-api", version.ref = "eclipse-microprofile-config-api" }
eclipse-microprofile-health-api = { group = "org.eclipse.microprofile.health", name = "microprofile-health-api", version.ref = "eclipse-microprofile-health-api" }
eclipse-microprofile-fault-tolerance-api = { group = "org.eclipse.microprofile.fault-tolerance", name = "microprofile-fault-tolerance-api", version.ref = "eclipse-microprofile-fault-tolerance-api" }
hibernate-validator = { group = "org.hibernate.validator", name = "hibernate-validator", version.ref = "hibernate-validator" }
jakarta-jakartaee = { group = "jakarta.platform", name = "jakarta.jakartaee-api", version.ref = "jakarta-jakartaee" }
jboss-resteasy-multipart-provider = { group = "org.jboss.resteasy", name = "resteasy-multipart-provider", version.ref = "jboss-resteasy-multipart-provider" }
wildfly-security-elytron-http-oidc = { group = "org.wildfly.security", name = "wildfly-elytron-http-oidc", version.ref = "wildfly-security-elytron-http-oidc" }
# ~dependencies provided by Wildfly

# yasson is required for using a JSONB context in our unit tests
# where we do not have the WildFly runtime environment available
eclipse-yasson = { group = "org.eclipse", name = "yasson", version.ref = "eclipse-yasson" }

kotest-runner-junit5 = { group = "io.kotest", name = "kotest-runner-junit5", version.ref = "kotest-runner-junit5" }
kotest-assertions-json = { group = "io.kotest", name = "kotest-assertions-json", version.ref = "kotest-assertions-json" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
json = { group = "org.json", name = "json", version.ref = "json-json" }

# integration test dependencies
testcontainers-testcontainers = { group = "org.testcontainers", name = "testcontainers", version.ref = "testcontainers" }
testcontainers-mockserver = { group = "org.testcontainers", name = "mockserver", version.ref = "testcontainers" }
testcontainers-postgresql = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }
slf4j-simple = { group = "org.slf4j", name = "slf4j-simple", version.ref = "slf4j-simple" }
github-kotlin-logging = { group = "io.github.oshai", name = "kotlin-logging-jvm", version.ref = "github-kotlin-logging" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-urlconnection = { group = "com.squareup.okhttp3", name = "okhttp-urlconnection", version.ref = "okhttp" }
jacoco-agent = { group = "org.jacoco", name="org.jacoco.agent", version.ref = "jacoco" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin" }
jsonschema2pojo = { id = "org.jsonschema2pojo", version.ref = "jsonschema2pojo" }
openapi = { id = "io.smallrye.openapi", version.ref = "openapi" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }
gradle-node = { id = "com.github.node-gradle.node", version.ref = "node-gradle" }
taskinfo = { id = "org.barfuin.gradle.taskinfo", version.ref = "taskinfo" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
